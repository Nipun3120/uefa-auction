{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveBiddingHelper = ({\n  player,\n  playerId,\n  teamId\n}) => {\n  _s();\n\n  const [biddingValue, setbiddingValue] = useState(parseInt(player.maxbid));\n  const [bidDisplay, setbidDisplay] = useState([]);\n  const [teamBids, setteamBids] = useState(null);\n\n  const sendBid = e => {\n    e.preventDefault();\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").add({\n      teamId: teamId,\n      biddingprice: biddingValue,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }); //console.log(\"Maxbid:\", player.maxbid);\n    //console.log(\"Price:\", biddingValue);\n\n    if (parseInt(player.maxbid) < parseInt(biddingValue) || parseInt(player.maxbid) === parseInt(player.baseprice)) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId\n      });\n    } //const ref2 = db.collection(\"players\").doc(playerId);\n\n\n    if (parseInt(biddingValue) < 200 && parseInt(biddingValue) >= 20) setbiddingValue(parseInt(biddingValue) + 10);else if (parseInt(biddingValue) < 500 && parseInt(biddingValue) >= 200) {\n      setbiddingValue(parseInt(biddingValue) + 20);\n    } else {\n      setbiddingValue(parseInt(biddingValue) + 25);\n    }\n  };\n\n  console.log(teamBids); // console.log(\"ID:\", playerId);\n\n  useEffect(() => {\n    ///setting bidding value\n    if (player.baseprice === player.maxbid) {\n      setbiddingValue(parseInt(player.baseprice));\n    } else {\n      if (parseInt(player.maxbid) < 200 && parseInt(player.maxbid) >= 20) setbiddingValue(parseInt(player.maxbid) + 10);else if (parseInt(player.maxbid) < 500 && parseInt(player.maxbid) >= 200) {\n        setbiddingValue(parseInt(player.maxbid) + 20);\n      } else {\n        setbiddingValue(parseInt(player.maxbid) + 25);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      setbidDisplay(snapshot.docs.map(doc => doc.data()));\n    });\n  }, []);\n  console.log(bidDisplay); //console.log(biddingValue);\n  // console.log(teamBids);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [player.name, \"(\", player.age, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: player.Image,\n      alt: \"No Image\",\n      height: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Runs: \", player.Runs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Batting Average: \", player.Batavg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Strike Rate: \", player.strikerate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Price: \", player.baseprice, \" lakhs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wickets: \", player.wickets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Economy: \", player.economy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bowling Average: \", player.Bowlavg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: sendBid,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: biddingValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), \"Bid\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), bidDisplay ? bidDisplay.map(bid => {\n      return (\n        /*#__PURE__*/\n        // console.log(\"bid:\", bid),\n        _jsxDEV(BiddingHistory, {\n          bid: bid\n        }, bid.id ? bid.id : 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)\n      );\n    }) : console.log(\"No bids\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveBiddingHelper, \"dkwxBKqmT3h8Rcem78AmxDWBhv0=\");\n\n_c = LiveBiddingHelper;\nexport default LiveBiddingHelper;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveBiddingHelper\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js"],"names":["React","useEffect","useState","db","firebase","BiddingHistory","LiveBiddingHelper","player","playerId","teamId","biddingValue","setbiddingValue","parseInt","maxbid","bidDisplay","setbidDisplay","teamBids","setteamBids","sendBid","e","preventDefault","collection","doc","add","biddingprice","timestamp","firestore","FieldValue","serverTimestamp","baseprice","update","maxbidBy","console","log","orderBy","onSnapshot","snapshot","docs","map","data","name","age","Image","Runs","Batavg","strikerate","wickets","economy","Bowlavg","bid","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nconst LiveBiddingHelper = ({ player, playerId, teamId }) => {\n  const [biddingValue, setbiddingValue] = useState(parseInt(player.maxbid));\n  const [bidDisplay, setbidDisplay] = useState([]);\n  const [teamBids, setteamBids] = useState(null);\n\n  const sendBid = (e) => {\n    e.preventDefault();\n\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").add({\n      teamId: teamId,\n      biddingprice: biddingValue,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    //console.log(\"Maxbid:\", player.maxbid);\n    //console.log(\"Price:\", biddingValue);\n    if (\n      parseInt(player.maxbid) < parseInt(biddingValue) ||\n      parseInt(player.maxbid) === parseInt(player.baseprice)\n    ) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId,\n      });\n    }\n    //const ref2 = db.collection(\"players\").doc(playerId);\n    if (parseInt(biddingValue) < 200 && parseInt(biddingValue) >= 20)\n      setbiddingValue(parseInt(biddingValue) + 10);\n    else if (parseInt(biddingValue) < 500 && parseInt(biddingValue) >= 200) {\n      setbiddingValue(parseInt(biddingValue) + 20);\n    } else {\n      setbiddingValue(parseInt(biddingValue) + 25);\n    }\n  };\n  console.log(teamBids);\n  // console.log(\"ID:\", playerId);\n  useEffect(() => {\n    ///setting bidding value\n\n    if (player.baseprice === player.maxbid) {\n      setbiddingValue(parseInt(player.baseprice));\n    } else {\n      if (parseInt(player.maxbid) < 200 && parseInt(player.maxbid) >= 20)\n        setbiddingValue(parseInt(player.maxbid) + 10);\n      else if (\n        parseInt(player.maxbid) < 500 &&\n        parseInt(player.maxbid) >= 200\n      ) {\n        setbiddingValue(parseInt(player.maxbid) + 20);\n      } else {\n        setbiddingValue(parseInt(player.maxbid) + 25);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setbidDisplay(snapshot.docs.map((doc) => doc.data()));\n      });\n  }, []);\n  console.log(bidDisplay);\n  //console.log(biddingValue);\n  // console.log(teamBids);\n  return (\n    <div>\n      <h2>\n        {player.name}({player.age})\n      </h2>\n      <img src={player.Image} alt=\"No Image\" height=\"500px\"></img>\n      <span>\n        <p>Runs: {player.Runs}</p>\n        <p>Batting Average: {player.Batavg}</p>\n        <p>Strike Rate: {player.strikerate}</p>\n        <p>Base Price: {player.baseprice} lakhs</p>\n      </span>\n      <span>\n        <p>Wickets: {player.wickets}</p>\n        <p>Economy: {player.economy}</p>\n        <p>Bowling Average: {player.Bowlavg}</p>\n      </span>\n      <form>\n        <button type=\"submit\" onClick={sendBid}>\n          <p>{biddingValue}</p>Bid\n        </button>\n      </form>\n      {bidDisplay\n        ? bidDisplay.map((bid) => {\n            return (\n              // console.log(\"bid:\", bid),\n              <BiddingHistory key={bid.id ? bid.id : 0} bid={bid} />\n            );\n          })\n        : console.log(\"No bids\")}\n    </div>\n  );\n};\n\nexport default LiveBiddingHelper;\n"]},"metadata":{},"sourceType":"module"}
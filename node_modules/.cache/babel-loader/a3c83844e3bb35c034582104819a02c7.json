{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { db } from \"../config/Firebase\";\nimport LiveBiddingHelper from \"./LiveBiddingHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveBidding = ({\n  auth\n}) => {\n  _s();\n\n  const [play, setPlay] = useState({});\n  const [playId, setPlayId] = useState(0);\n\n  const fetchsome = () => {\n    db.collection(\"players\").where(\"display\", \"==\", true).where(\"category\", \"==\", \"live\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        console.log(doc.id, \"=>\", doc.data());\n        setPlay(doc.data());\n        setPlayId(doc.id);\n      });\n    }).catch(error => {\n      console.log(\"Could not fetch\");\n    });\n  };\n\n  console.log(play);\n  useEffect(() => {\n    console.log(\"Working....\");\n    fetchsome();\n  }, []);\n  /* if (!auth.uid) return <Redirect to=\"/signin\" />; */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LiveBiddingHelper, {\n      player: play,\n      playerId: playerId,\n      teamId: auth.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveBidding, \"ELPgfVPwqfsZlu4Up8tjYX86QlA=\");\n\n_c = LiveBidding;\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n}; */\n\n\nexport default connect(mapStateToProps)(LiveBidding);\n/* const [playerCard, setPlayerCard] = useState({\n    Batavg: \"\",\n    Image: \"\",\n    Runs: \"\",\n    age: \"\",\n    baseprice: \"\",\n    class: \"\",\n    display: Boolean,\n    maxbid: 0,\n    maxbidBy: \"\",\n    name: \"\",\n    strikerate: \"\",\n  }); */\n\n/* const fetchCard = () => {\n    db.collection(\"players\").onSnapshot((snapshot) => {\n      const result = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        data: doc.data(),\n      }));\n      result.map((res) => {\n        console.log(res.data.display);\n        if (res.data.display === true) {\n          console.log(res.data);\n          console.log(res.data.name);\n          setPlayerCard({\n            Batavg: res.data.Batavg,\n            Image: res.data.Image,\n            Runs: res.data.Runs,\n            age: res.data.age,\n            baseprice: res.data.baseprice,\n            class: res.data.class,\n            display: res.data.display,\n            maxbid: res.data.maxbid,\n            maxbidBy: res.data.maxbidBy,\n            name: res.data.name,\n            strikerate: res.data.strikerate,\n          });\n        }\n      });\n      console.log(playerCard);\n    });\n  }; */\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveBidding\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding.js"],"names":["React","useEffect","useState","connect","Redirect","db","LiveBiddingHelper","LiveBidding","auth","play","setPlay","playId","setPlayId","fetchsome","collection","where","get","then","snapshot","forEach","doc","console","log","id","data","catch","error","playerId","uid","mapStateToProps","state","authError","firebase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAMW,SAAS,GAAG,MAAM;AACtBR,IAAAA,EAAE,CAACS,UAAH,CAAc,SAAd,EACGC,KADH,CACS,SADT,EACoB,IADpB,EAC0B,IAD1B,EAEGA,KAFH,CAES,UAFT,EAEqB,IAFrB,EAE2B,MAF3B,EAGGC,GAHH,GAIGC,IAJH,CAISC,QAAD,IAAc;AAClBA,MAAAA,QAAQ,CAACC,OAAT,CAAkBC,GAAD,IAAS;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,EAAhB,EAAoB,IAApB,EAA0BH,GAAG,CAACI,IAAJ,EAA1B;AACAd,QAAAA,OAAO,CAACU,GAAG,CAACI,IAAJ,EAAD,CAAP;AACAZ,QAAAA,SAAS,CAACQ,GAAG,CAACG,EAAL,CAAT;AACD,OAJD;AAKD,KAVH,EAWGE,KAXH,CAWUC,KAAD,IAAW;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAbH;AAcD,GAfD;;AAgBAD,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAT,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;AAKA;;AACA,sBACE;AAAA,2BACE,QAAC,iBAAD;AAAmB,MAAA,MAAM,EAAEJ,IAA3B;AAAiC,MAAA,QAAQ,EAAEkB,QAA3C;AAAqD,MAAA,MAAM,EAAEnB,IAAI,CAACoB;AAAlE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMrB,W;;KAAAA,W;;AAkCN,MAAMsB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACtB,IAAN,CAAWuB,SADjB;AAELvB,IAAAA,IAAI,EAAEsB,KAAK,CAACE,QAAN,CAAexB;AAFhB,GAAP;AAID,CALD;AAOA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,OAAO,CAAC0B,eAAD,CAAP,CAAyBtB,WAAzB,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { db } from \"../config/Firebase\";\nimport LiveBiddingHelper from \"./LiveBiddingHelper\";\n\nconst LiveBidding = ({ auth }) => {\n  const [play, setPlay] = useState({});\n  const [playId, setPlayId] = useState(0);\n  const fetchsome = () => {\n    db.collection(\"players\")\n      .where(\"display\", \"==\", true)\n      .where(\"category\", \"==\", \"live\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          console.log(doc.id, \"=>\", doc.data());\n          setPlay(doc.data());\n          setPlayId(doc.id);\n        });\n      })\n      .catch((error) => {\n        console.log(\"Could not fetch\");\n      });\n  };\n  console.log(play);\n\n  useEffect(() => {\n    console.log(\"Working....\");\n    fetchsome();\n  }, []);\n\n  /* if (!auth.uid) return <Redirect to=\"/signin\" />; */\n  return (\n    <div>\n      <LiveBiddingHelper player={play} playerId={playerId} teamId={auth.uid} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n}; */\n\nexport default connect(mapStateToProps)(LiveBidding);\n\n/* const [playerCard, setPlayerCard] = useState({\n    Batavg: \"\",\n    Image: \"\",\n    Runs: \"\",\n    age: \"\",\n    baseprice: \"\",\n    class: \"\",\n    display: Boolean,\n    maxbid: 0,\n    maxbidBy: \"\",\n    name: \"\",\n    strikerate: \"\",\n  }); */\n\n/* const fetchCard = () => {\n    db.collection(\"players\").onSnapshot((snapshot) => {\n      const result = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        data: doc.data(),\n      }));\n      result.map((res) => {\n        console.log(res.data.display);\n        if (res.data.display === true) {\n          console.log(res.data);\n          console.log(res.data.name);\n          setPlayerCard({\n            Batavg: res.data.Batavg,\n            Image: res.data.Image,\n            Runs: res.data.Runs,\n            age: res.data.age,\n            baseprice: res.data.baseprice,\n            class: res.data.class,\n            display: res.data.display,\n            maxbid: res.data.maxbid,\n            maxbidBy: res.data.maxbidBy,\n            name: res.data.name,\n            strikerate: res.data.strikerate,\n          });\n        }\n      });\n      console.log(playerCard);\n    });\n  }; */\n"]},"metadata":{},"sourceType":"module"}
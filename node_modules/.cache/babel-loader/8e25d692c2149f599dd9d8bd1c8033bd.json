{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/SilentBidding/SilentBiddingHelper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { Bids } from \"../../store/actions/playerActions\";\n\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\nimport { db } from \"../../config/Firebase\"; // import classes from \"*.module.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nconst SilentBiddingHelper = ({\n  player,\n  playerId,\n  teamId\n}) => {\n  _s();\n\n  const [biddingValue, setbiddingValue] = useState(parseInt(player.baseprice));\n\n  const sendBid = e => {\n    e.preventDefault();\n    db.collection(\"players\").doc(player.name).collection(\"Bids\").doc(teamId).set({\n      bid: [{\n        biddingprice: biddingValue,\n        timestamp: firebase.firestore.Timestamp.now()\n      }]\n    }, {\n      merge: true\n    });\n    console.log(\"Maxbid:\", player.maxbid);\n    console.log(\"Price:\", biddingValue);\n\n    if (player.maxbid < biddingValue) {\n      db.collection(\"players\").doc(player.name).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId\n      });\n    }\n\n    if (player.status === \"close\") {\n      db.collection(\"players\").doc(player.name).update({\n        team: teamId\n      });\n    }\n\n    window.location.reload(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledTableRow, {\n      children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n        children: player.Runs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n        children: player.Batavg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n        children: player.strikerate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n        children: player.baseprice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n        children: player.maxbid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendBid,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: biddingValue,\n            onChange: event => {\n              event.preventDefault();\n              setbiddingValue(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\"\n            /* onClick={(event) => {\n            event.preventDefault();\n            Bids(playerId, nextBid);\n            }} */\n            ,\n            children: \"Bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SilentBiddingHelper, \"Kh9N1DtBtaEGqOJZEDiP/epoJa0=\");\n\n_c = SilentBiddingHelper;\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    playerB: state.playerB\n  };\n};\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    Bids: (playerId, biddingprice) => dispatch(Bids(playerId, biddingprice)),\n  };\n}; */\n\n\nexport default connect(mapStateToProps)(SilentBiddingHelper);\n\nvar _c;\n\n$RefreshReg$(_c, \"SilentBiddingHelper\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/SilentBidding/SilentBiddingHelper.js"],"names":["React","useEffect","useState","connect","firebase","withStyles","makeStyles","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","db","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","SilentBiddingHelper","player","playerId","teamId","biddingValue","setbiddingValue","parseInt","baseprice","sendBid","e","preventDefault","collection","doc","name","set","bid","biddingprice","timestamp","firestore","Timestamp","now","merge","console","log","maxbid","update","maxbidBy","status","team","window","location","reload","Runs","Batavg","strikerate","event","target","value","mapStateToProps","state","authError","auth","playerB"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { Bids } from \"../../store/actions/playerActions\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport { db } from \"../../config/Firebase\";\n// import classes from \"*.module.css\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst SilentBiddingHelper = ({ player, playerId, teamId }) => {\n  const [biddingValue, setbiddingValue] = useState(parseInt(player.baseprice));\n\n  const sendBid = (e) => {\n    e.preventDefault();\n    db.collection(\"players\")\n      .doc(player.name)\n      .collection(\"Bids\")\n      .doc(teamId)\n      .set(\n        {\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        },\n        { merge: true }\n      );\n    console.log(\"Maxbid:\", player.maxbid);\n    console.log(\"Price:\", biddingValue);\n    if (player.maxbid < biddingValue) {\n      db.collection(\"players\").doc(player.name).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId,\n      });\n    }\n    if (player.status === \"close\") {\n      db.collection(\"players\").doc(player.name).update({\n        team: teamId,\n      });\n    }\n\n    window.location.reload(true);\n  };\n\n  return (\n    <>\n      {/* <h1>{playerId}</h1> */}\n      <StyledTableRow>\n        <StyledTableCell>{player.name}</StyledTableCell>\n        <StyledTableCell>{player.Runs}</StyledTableCell>\n        <StyledTableCell>{player.Batavg}</StyledTableCell>\n        <StyledTableCell>{player.strikerate}</StyledTableCell>\n        <StyledTableCell></StyledTableCell>\n        <StyledTableCell></StyledTableCell>\n        <StyledTableCell></StyledTableCell>\n        <StyledTableCell>{player.baseprice}</StyledTableCell>\n        <StyledTableCell>{player.maxbid}</StyledTableCell>\n        <StyledTableCell>\n          <form onSubmit={sendBid}>\n            <input\n              value={biddingValue}\n              onChange={(event) => {\n                event.preventDefault();\n                setbiddingValue(event.target.value);\n              }}\n            />\n            <button\n              type=\"submit\"\n              /* onClick={(event) => {\n              event.preventDefault();\n              Bids(playerId, nextBid);\n            }} */\n            >\n              Bid\n            </button>\n          </form>\n        </StyledTableCell>\n      </StyledTableRow>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    playerB: state.playerB,\n  };\n};\n\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    Bids: (playerId, biddingprice) => dispatch(Bids(playerId, biddingprice)),\n  };\n}; */\nexport default connect(mapStateToProps)(SilentBiddingHelper);\n"]},"metadata":{},"sourceType":"module"}
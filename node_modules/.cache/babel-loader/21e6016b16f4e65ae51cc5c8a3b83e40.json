{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/Admin/PlayerSlots.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport AllSilentPlayers from \"./AllSilentPlayers\";\nimport PlayerSlotsHelper from \"./PlayerSlotsHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerSlots = () => {\n  _s();\n\n  const [showPlayers, setShowPlayers] = useState([]);\n  const [fetchClass, setFetchClass] = useState(\"show\");\n  const [classAndAssign, setclassAndAssign] = useState(\"\");\n\n  const changeslot = e => {\n    e.preventDefault();\n    setShowPlayers([]);\n    db.collection(\"players\").where(\"category\", \"==\", \"silent\").where(\"class\", \"==\", fetchClass).get().then(snapshot => {\n      if (snapshot.exists) {\n        snapshot.forEach(doc => {\n          setShowPlayers(showPlayers => [...showPlayers, {\n            id: doc.id,\n            data: doc.data()\n          }]);\n          db.collection(\"players\").doc(doc.id).update({\n            class: \"show\"\n          });\n          /* setShowPlayers((showPlayers) => [\n            ...showPlayers,\n            { id: doc.id, data: doc.data() },\n          ]); */\n        });\n      }\n    });\n  };\n\n  const changeslot_assignteam = e => {\n    e.preventDefault();\n    setShowPlayers([]);\n    db.collection(\"players\").where(\"category\", \"==\", \"silent\").where(\"class\", \"==\", \"show\").get().then(snapshot => {\n      if (snapshot.exists) {\n        snapshot.forEach(doc => {\n          setShowPlayers(showPlayers => [...showPlayers, {\n            id: doc.id,\n            data: doc.data()\n          }]);\n          db.collection(\"players\").doc(doc.id).update({\n            class: classAndAssign,\n            team: doc.data().maxbidBy,\n            status: \"close\"\n          });\n          const ref3 = db.collection(\"users\").doc(doc.data().maxbidBy);\n\n          if (doc.data().maxbidBy !== \"\") {\n            ref3.get().then(snapshot => {\n              if (snapshot.exists) {\n                ref3.update({\n                  teamBalance: parseInt(snapshot.data().teamBalance) - parseInt(doc.data().maxbid)\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  console.log(showPlayers);\n  console.log(fetchClass);\n  console.log(classAndAssign);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          e.preventDefault();\n          setFetchClass(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeslot,\n        children: \"Change Slot to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          e.preventDefault();\n          setclassAndAssign(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeslot_assignteam,\n        children: \"Change Slot and Assign Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showPlayers.map(player => {\n      return player ? /*#__PURE__*/_jsxDEV(PlayerSlotsHelper, {\n        player: player\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\\"No Silent player with class Given\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlayerSlots, \"MtV5MbYu4A2RkwhINyMxLHfg+WQ=\");\n\n_c = PlayerSlots;\nexport default PlayerSlots;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerSlots\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/Admin/PlayerSlots.js"],"names":["React","useEffect","useState","db","AllSilentPlayers","PlayerSlotsHelper","PlayerSlots","showPlayers","setShowPlayers","fetchClass","setFetchClass","classAndAssign","setclassAndAssign","changeslot","e","preventDefault","collection","where","get","then","snapshot","exists","forEach","doc","id","data","update","class","changeslot_assignteam","team","maxbidBy","status","ref3","teamBalance","parseInt","maxbid","console","log","target","value","map","player"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport AllSilentPlayers from \"./AllSilentPlayers\";\nimport PlayerSlotsHelper from \"./PlayerSlotsHelper\";\n\nconst PlayerSlots = () => {\n  const [showPlayers, setShowPlayers] = useState([]);\n  const [fetchClass, setFetchClass] = useState(\"show\");\n  const [classAndAssign, setclassAndAssign] = useState(\"\");\n  const changeslot = (e) => {\n    e.preventDefault();\n    setShowPlayers([]);\n    db.collection(\"players\")\n      .where(\"category\", \"==\", \"silent\")\n      .where(\"class\", \"==\", fetchClass)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists) {\n          snapshot.forEach((doc) => {\n            setShowPlayers((showPlayers) => [\n              ...showPlayers,\n              { id: doc.id, data: doc.data() },\n            ]);\n            db.collection(\"players\").doc(doc.id).update({\n              class: \"show\",\n            });\n            /* setShowPlayers((showPlayers) => [\n              ...showPlayers,\n              { id: doc.id, data: doc.data() },\n            ]); */\n          });\n        }\n      });\n  };\n  const changeslot_assignteam = (e) => {\n    e.preventDefault();\n    setShowPlayers([]);\n    db.collection(\"players\")\n      .where(\"category\", \"==\", \"silent\")\n      .where(\"class\", \"==\", \"show\")\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists) {\n          snapshot.forEach((doc) => {\n            setShowPlayers((showPlayers) => [\n              ...showPlayers,\n              { id: doc.id, data: doc.data() },\n            ]);\n            db.collection(\"players\").doc(doc.id).update({\n              class: classAndAssign,\n              team: doc.data().maxbidBy,\n              status: \"close\",\n            });\n\n            const ref3 = db.collection(\"users\").doc(doc.data().maxbidBy);\n            if (doc.data().maxbidBy !== \"\") {\n              ref3.get().then((snapshot) => {\n                if (snapshot.exists) {\n                  ref3.update({\n                    teamBalance:\n                      parseInt(snapshot.data().teamBalance) -\n                      parseInt(doc.data().maxbid),\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n  };\n\n  console.log(showPlayers);\n  console.log(fetchClass);\n  console.log(classAndAssign);\n  return (\n    <div>\n      <form>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            e.preventDefault();\n            setFetchClass(e.target.value);\n          }}\n        />\n        <button onClick={changeslot}>Change Slot to show</button>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            e.preventDefault();\n            setclassAndAssign(e.target.value);\n          }}\n        />\n        <button onClick={changeslot_assignteam}>\n          Change Slot and Assign Team\n        </button>\n      </form>\n      {showPlayers.map((player) => {\n        return player ? (\n          <PlayerSlotsHelper key={player.id} player={player} />\n        ) : (\n          <h2>\"No Silent player with class Given\"</h2>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PlayerSlots;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nimport { Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveBiddingHelper = ({\n  player,\n  playerId,\n  teamId\n}) => {\n  _s();\n\n  const [biddingValue, setbiddingValue] = useState(parseInt(player.maxbid));\n  const [bidDisplay, setbidDisplay] = useState([]);\n\n  const sendBid = e => {\n    e.preventDefault();\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").add({\n      teamId: teamId,\n      biddingprice: biddingValue,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }); //console.log(\"Maxbid:\", player.maxbid);\n    //console.log(\"Price:\", biddingValue);\n\n    if (parseInt(player.maxbid) < parseInt(biddingValue) || parseInt(player.maxbid) === parseInt(player.baseprice)) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId\n      });\n    } //const ref2 = db.collection(\"players\").doc(playerId);\n\n\n    if (parseInt(biddingValue) < 200 && parseInt(biddingValue) >= 20) setbiddingValue(parseInt(biddingValue) + 10);else if (parseInt(biddingValue) < 500 && parseInt(biddingValue) >= 200) {\n      setbiddingValue(parseInt(biddingValue) + 20);\n    } else {\n      setbiddingValue(parseInt(biddingValue) + 25);\n    }\n  }; // console.log(\"ID:\", playerId);\n\n\n  useEffect(() => {\n    ///setting bidding value\n    db.collection(\"players\").where(\"display\", \"==\", \"true\").where(\"category\", \"==\", \"live\").onSnapshot(snapshot => {\n      snapshot.docs.map(doc => {\n        // console.log(doc.id, \"=>\", doc.data());\n        if (parseInt(doc.data().baseprice) === parseInt(doc.data().maxbid) && player.maxbidBy === \"\") {\n          console.log(\"equal\"); // setbiddingValue(parseInt(doc.data().baseprice));\n        } else if (parseInt(doc.data().baseprice) === parseInt(doc.data().maxbid) && player.maxbidBy !== \"\") {\n          if (parseInt(doc.data().maxbid) < 500 && parseInt(doc.data().maxbid) >= 200) {\n            setbiddingValue(parseInt(doc.data().maxbid) + 20);\n          }\n        } else {\n          if (parseInt(doc.data().maxbid) < 500 && parseInt(doc.data().maxbid) >= 200) {\n            setbiddingValue(parseInt(doc.data().maxbid) + 20);\n          } else {\n            setbiddingValue(parseInt(doc.data().maxbid) + 25);\n          }\n        }\n      });\n\n      includeMetadataChanges: true;\n    });\n    /*  if (parseInt(player.baseprice) === parseInt(player.maxbid)) {\n      setbiddingValue(parseInt(player.baseprice));\n    } else {\n      if (parseInt(player.maxbid) < 200 && parseInt(player.maxbid) >= 20)\n        setbiddingValue(parseInt(player.maxbid) + 10);\n      else if (\n        parseInt(player.maxbid) < 500 &&\n        parseInt(player.maxbid) >= 200\n      ) {\n        setbiddingValue(parseInt(player.maxbid) + 20);\n      } else {\n        setbiddingValue(parseInt(player.maxbid) + 25);\n      }\n    }*/\n  }, [player.maxbid]);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      setbidDisplay(snapshot.docs.map(doc => doc.data()));\n    });\n  }, []); //console.log(bidDisplay);\n\n  console.log(biddingValue);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [player.name, \"(\", player.age, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: player.Image,\n        alt: \"No Image\",\n        height: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Runs: \", player.Runs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Batting Average: \", player.Batavg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Strike Rate: \", player.strikerate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Base Price: \", player.baseprice, \" lakhs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wickets: \", player.wickets]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Economy: \", player.economy]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bowling Average: \", player.Bowlavg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: sendBid,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: biddingValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), \"Bid\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: true,\n      children: bidDisplay ? bidDisplay.map(bid => {\n        return /*#__PURE__*/_jsxDEV(BiddingHistory, {\n          bid: bid\n        }, bid.id ? bid.id : 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 22\n        }, this);\n      }) : console.log(\"No bids\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveBiddingHelper, \"DkMn11BguIdHnyF5/3YGgC7Vvjs=\");\n\n_c = LiveBiddingHelper;\nexport default LiveBiddingHelper;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveBiddingHelper\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js"],"names":["React","useEffect","useState","db","firebase","BiddingHistory","Grid","LiveBiddingHelper","player","playerId","teamId","biddingValue","setbiddingValue","parseInt","maxbid","bidDisplay","setbidDisplay","sendBid","e","preventDefault","collection","doc","add","biddingprice","timestamp","firestore","FieldValue","serverTimestamp","baseprice","update","maxbidBy","where","onSnapshot","snapshot","docs","map","data","console","log","includeMetadataChanges","orderBy","name","age","Image","Runs","Batavg","strikerate","wickets","economy","Bowlavg","bid","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nimport { Grid } from \"@material-ui/core\";\nconst LiveBiddingHelper = ({ player, playerId, teamId }) => {\n  const [biddingValue, setbiddingValue] = useState(parseInt(player.maxbid));\n  const [bidDisplay, setbidDisplay] = useState([]);\n\n  const sendBid = (e) => {\n    e.preventDefault();\n\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").add({\n      teamId: teamId,\n      biddingprice: biddingValue,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    //console.log(\"Maxbid:\", player.maxbid);\n    //console.log(\"Price:\", biddingValue);\n    if (\n      parseInt(player.maxbid) < parseInt(biddingValue) ||\n      parseInt(player.maxbid) === parseInt(player.baseprice)\n    ) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId,\n      });\n    }\n    //const ref2 = db.collection(\"players\").doc(playerId);\n    if (parseInt(biddingValue) < 200 && parseInt(biddingValue) >= 20)\n      setbiddingValue(parseInt(biddingValue) + 10);\n    else if (parseInt(biddingValue) < 500 && parseInt(biddingValue) >= 200) {\n      setbiddingValue(parseInt(biddingValue) + 20);\n    } else {\n      setbiddingValue(parseInt(biddingValue) + 25);\n    }\n  };\n\n  // console.log(\"ID:\", playerId);\n  useEffect(() => {\n    ///setting bidding value\n    db.collection(\"players\")\n      .where(\"display\", \"==\", \"true\")\n      .where(\"category\", \"==\", \"live\")\n      .onSnapshot((snapshot) => {\n        snapshot.docs.map((doc) => {\n          // console.log(doc.id, \"=>\", doc.data());\n\n          if (\n            parseInt(doc.data().baseprice) === parseInt(doc.data().maxbid) &&\n            player.maxbidBy === \"\"\n          ) {\n            console.log(\"equal\");\n            // setbiddingValue(parseInt(doc.data().baseprice));\n          } else if (\n            parseInt(doc.data().baseprice) === parseInt(doc.data().maxbid) &&\n            player.maxbidBy !== \"\"\n          ) {\n            if (\n              parseInt(doc.data().maxbid) < 500 &&\n              parseInt(doc.data().maxbid) >= 200\n            ) {\n              setbiddingValue(parseInt(doc.data().maxbid) + 20);\n            }\n          } else {\n            if (\n              parseInt(doc.data().maxbid) < 500 &&\n              parseInt(doc.data().maxbid) >= 200\n            ) {\n              setbiddingValue(parseInt(doc.data().maxbid) + 20);\n            } else {\n              setbiddingValue(parseInt(doc.data().maxbid) + 25);\n            }\n          }\n        });\n        includeMetadataChanges: true;\n      });\n\n    /*  if (parseInt(player.baseprice) === parseInt(player.maxbid)) {\n      setbiddingValue(parseInt(player.baseprice));\n    } else {\n      if (parseInt(player.maxbid) < 200 && parseInt(player.maxbid) >= 20)\n        setbiddingValue(parseInt(player.maxbid) + 10);\n      else if (\n        parseInt(player.maxbid) < 500 &&\n        parseInt(player.maxbid) >= 200\n      ) {\n        setbiddingValue(parseInt(player.maxbid) + 20);\n      } else {\n        setbiddingValue(parseInt(player.maxbid) + 25);\n      }\n    }*/\n  }, [player.maxbid]);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setbidDisplay(snapshot.docs.map((doc) => doc.data()));\n      });\n  }, []);\n  //console.log(bidDisplay);\n  console.log(biddingValue);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item sm>\n        <h2>\n          {player.name}({player.age})\n        </h2>\n        <img src={player.Image} alt=\"No Image\" height=\"500px\"></img>\n        <Grid item sm={3}>\n          <span>\n            <p>Runs: {player.Runs}</p>\n            <p>Batting Average: {player.Batavg}</p>\n            <p>Strike Rate: {player.strikerate}</p>\n            <p>Base Price: {player.baseprice} lakhs</p>\n          </span>\n        </Grid>\n        <Grid item sm={3}>\n          <span>\n            <p>Wickets: {player.wickets}</p>\n            <p>Economy: {player.economy}</p>\n            <p>Bowling Average: {player.Bowlavg}</p>\n          </span>\n        </Grid>\n\n        {/* {player.maxbidBy === teamId ? <h3>WINNING</h3> : console.log(\"False\")} */}\n        <form>\n          <button type=\"submit\" onClick={sendBid}>\n            <p>{biddingValue}</p>Bid\n          </button>\n        </form>\n      </Grid>\n      <Grid item sm>\n        {bidDisplay\n          ? bidDisplay.map((bid) => {\n              return <BiddingHistory key={bid.id ? bid.id : 0} bid={bid} />;\n            })\n          : console.log(\"No bids\")}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LiveBiddingHelper;\n"]},"metadata":{},"sourceType":"module"}
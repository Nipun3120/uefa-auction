{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/SilentBidding/SilentBiddingHelper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Bids } from \"../../store/actions/playerActions\";\n\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\nimport { db } from \"../../config/Firebase\"; // import classes from \"*.module.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst SilentBiddingHelper = ({\n  player,\n  playerId,\n  auth\n}) => {\n  _s();\n\n  const [nextBid, setnextBid] = useState(parseInt(player.baseprice));\n  console.log(player);\n  console.log(playerId); ///////\n\n  const Bids = () => {\n    const teamId = auth.uid;\n    console.log(teamId);\n    console.log(\"Actions----\");\n    console.log(playerId);\n    console.log(parseInt(nextBid));\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").doc(teamId).set({\n      bid: [{\n        biddingprice: nextBid,\n        timestamp: firebase.firestore.Timestamp.now()\n      }]\n    }, {\n      merge: true\n    });\n    /* const maxi = 0;\n    db.collection(\"players\")\n      .where(\"name\", \"==\", String(playerId))\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          console.log(\"Max:\", doc.data().maxbid);\n          maxi = doc.data().maxbid;\n        });\n      });\n    */\n\n    console.log(\"Maxbid:\", player.maxbid);\n    console.log(\"Price:\", nextBid);\n\n    if (player.maxbid < nextBid) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: nextBid,\n        maxbidBy: teamId\n      });\n    }\n\n    if (nextBid < 300 && nextBid >= 200) setnextBid(nextBid + 10);else setnextBid(nextBid + 20);\n  };\n  /* \n    if (maxi < nextBid) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: nextBid,\n        maxbidBy: teamId,\n      });\n    }\n  }; */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n      children: player.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n      children: player.Runs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n      children: player.Batavg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n      children: player.strikerate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n      children: player.baseprice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n      children: player.maxbid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: Bids,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: nextBid,\n          onChange: event => {\n            event.preventDefault();\n            setnextBid(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\"\n          /* onClick={(event) => {\n            event.preventDefault();\n            Bids(playerId, nextBid);\n          }} */\n          ,\n          children: \"Bid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SilentBiddingHelper, \"o4Ombj6g0OcK56ykqzN8pelb2ZM=\");\n\n_c = SilentBiddingHelper;\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    playerB: state.playerB\n  };\n};\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    Bids: (playerId, biddingprice) => dispatch(Bids(playerId, biddingprice)),\n  };\n}; */\n\n\nexport default connect(mapStateToProps)(SilentBiddingHelper);\n\nvar _c;\n\n$RefreshReg$(_c, \"SilentBiddingHelper\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/SilentBidding/SilentBiddingHelper.js"],"names":["React","useState","connect","firebase","withStyles","makeStyles","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","db","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","SilentBiddingHelper","player","playerId","auth","nextBid","setnextBid","parseInt","baseprice","console","log","Bids","teamId","uid","collection","doc","set","bid","biddingprice","timestamp","firestore","Timestamp","now","merge","maxbid","update","maxbidBy","name","Runs","Batavg","strikerate","event","preventDefault","target","value","mapStateToProps","state","authError","playerB"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import { Bids } from \"../../store/actions/playerActions\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport { db } from \"../../config/Firebase\";\n// import classes from \"*.module.css\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst SilentBiddingHelper = ({ player, playerId, auth }) => {\n  const [nextBid, setnextBid] = useState(parseInt(player.baseprice));\n  console.log(player);\n  console.log(playerId);\n\n  ///////\n\n  const Bids = () => {\n    const teamId = auth.uid;\n    console.log(teamId);\n    console.log(\"Actions----\");\n    console.log(playerId);\n\n    console.log(parseInt(nextBid));\n    db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId)\n      .set(\n        {\n          bid: [\n            {\n              biddingprice: nextBid,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        },\n        { merge: true }\n      );\n\n    /* const maxi = 0;\n    db.collection(\"players\")\n      .where(\"name\", \"==\", String(playerId))\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          console.log(\"Max:\", doc.data().maxbid);\n          maxi = doc.data().maxbid;\n        });\n      });\n */\n\n    console.log(\"Maxbid:\", player.maxbid);\n    console.log(\"Price:\", nextBid);\n    if (player.maxbid < nextBid) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: nextBid,\n        maxbidBy: teamId,\n      });\n    }\n    if (nextBid < 300 && nextBid >= 200) setnextBid(nextBid + 10);\n    else setnextBid(nextBid + 20);\n  };\n\n  /* \n    if (maxi < nextBid) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: nextBid,\n        maxbidBy: teamId,\n      });\n    }\n  }; */\n\n  return (\n    <>\n      {/* <h1>{playerId}</h1> */}\n\n      <StyledTableCell>{player.name}</StyledTableCell>\n      <StyledTableCell>{player.Runs}</StyledTableCell>\n      <StyledTableCell>{player.Batavg}</StyledTableCell>\n      <StyledTableCell>{player.strikerate}</StyledTableCell>\n      <StyledTableCell></StyledTableCell>\n      <StyledTableCell></StyledTableCell>\n      <StyledTableCell></StyledTableCell>\n      <StyledTableCell>{player.baseprice}</StyledTableCell>\n      <StyledTableCell>{player.maxbid}</StyledTableCell>\n      <StyledTableCell>\n        <form onSubmit={Bids}>\n          <input\n            value={nextBid}\n            onChange={(event) => {\n              event.preventDefault();\n              setnextBid(event.target.value);\n            }}\n          />\n          <button\n            type=\"submit\"\n            /* onClick={(event) => {\n              event.preventDefault();\n              Bids(playerId, nextBid);\n            }} */\n          >\n            Bid\n          </button>\n        </form>\n      </StyledTableCell>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    playerB: state.playerB,\n  };\n};\n\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    Bids: (playerId, biddingprice) => dispatch(Bids(playerId, biddingprice)),\n  };\n}; */\nexport default connect(mapStateToProps)(SilentBiddingHelper);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/SilentBidding.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../config/Firebase\";\nimport { Bids } from \"../store/actions/playerActions\";\nimport { connect } from \"react-redux\";\nimport SilentBiddingHelper from \"./SilentBiddingHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SilentBidding = ({\n  auth,\n  playerB\n}) => {\n  _s();\n\n  const [silentPlayers, setSilentPlayers] = useState({});\n  const [playerId, setplayerId] = useState(0);\n\n  const fetchSilent = () => {\n    db.collection(\"players\").where(\"category\", \"==\", \"live\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        setplayerId(doc.id);\n        console.log(doc.id, \"=>\", doc.data());\n        setSilentPlayers({ ...silentPlayers,\n          id: doc.id,\n          data: doc.data()\n        });\n      });\n    }).catch(error => {\n      console.log(\"Could not fetch\");\n    });\n  };\n\n  console.log(playerId);\n  console.log(silentPlayers);\n  useEffect(() => {\n    console.log(\"Working....\");\n    fetchSilent();\n  }, []);\n  const [id, playerData] = silentPlayers;\n  console.log(id);\n  console.log(playerData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Silent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SilentBidding, \"brVhJSXVtLHV29a4E9En1mRJZdo=\");\n\n_c = SilentBidding;\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    playerB: state.playerB\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    Bids: (playerId, biddingprice) => dispatch(Bids(playerId, biddingprice))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SilentBidding);\n\nvar _c;\n\n$RefreshReg$(_c, \"SilentBidding\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/SilentBidding.js"],"names":["React","useState","useEffect","db","Bids","connect","SilentBiddingHelper","SilentBidding","auth","playerB","silentPlayers","setSilentPlayers","playerId","setplayerId","fetchSilent","collection","where","get","then","snapshot","forEach","doc","id","console","log","data","catch","error","playerData","mapStateToProps","state","authError","firebase","mapDispatchToProps","dispatch","biddingprice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,SAASC,IAAT,QAAqB,gCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAC3C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMa,WAAW,GAAG,MAAM;AACxBX,IAAAA,EAAE,CAACY,UAAH,CAAc,SAAd,EACGC,KADH,CACS,UADT,EACqB,IADrB,EAC2B,MAD3B,EAEGC,GAFH,GAGGC,IAHH,CAGSC,QAAD,IAAc;AAClBA,MAAAA,QAAQ,CAACC,OAAT,CAAkBC,GAAD,IAAS;AACxBR,QAAAA,WAAW,CAACQ,GAAG,CAACC,EAAL,CAAX;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,EAAhB,EAAoB,IAApB,EAA0BD,GAAG,CAACI,IAAJ,EAA1B;AACAd,QAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBY,UAAAA,EAAE,EAAED,GAAG,CAACC,EAA5B;AAAgCG,UAAAA,IAAI,EAAEJ,GAAG,CAACI,IAAJ;AAAtC,SAAD,CAAhB;AACD,OALD;AAMD,KAVH,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAbH;AAcD,GAfD;;AAgBAD,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAV,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;AAIA,QAAM,CAACQ,EAAD,EAAKM,UAAL,IAAmBlB,aAAzB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1CD;;GAAMrB,a;;KAAAA,a;;AA4CN,MAAMsB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACtB,IAAN,CAAWuB,SADjB;AAELvB,IAAAA,IAAI,EAAEsB,KAAK,CAACE,QAAN,CAAexB,IAFhB;AAGLC,IAAAA,OAAO,EAAEqB,KAAK,CAACrB;AAHV,GAAP;AAKD,CAND;;AAQA,MAAMwB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL9B,IAAAA,IAAI,EAAE,CAACQ,QAAD,EAAWuB,YAAX,KAA4BD,QAAQ,CAAC9B,IAAI,CAACQ,QAAD,EAAWuB,YAAX,CAAL;AADrC,GAAP;AAGD,CAJD;;AAKA,eAAe9B,OAAO,CAACwB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C1B,aAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { db } from \"../config/Firebase\";\nimport { Bids } from \"../store/actions/playerActions\";\nimport { connect } from \"react-redux\";\nimport SilentBiddingHelper from \"./SilentBiddingHelper\";\n\nconst SilentBidding = ({ auth, playerB }) => {\n  const [silentPlayers, setSilentPlayers] = useState({});\n\n  const [playerId, setplayerId] = useState(0);\n\n  const fetchSilent = () => {\n    db.collection(\"players\")\n      .where(\"category\", \"==\", \"live\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          setplayerId(doc.id);\n\n          console.log(doc.id, \"=>\", doc.data());\n          setSilentPlayers({ ...silentPlayers, id: doc.id, data: doc.data() });\n        });\n      })\n      .catch((error) => {\n        console.log(\"Could not fetch\");\n      });\n  };\n  console.log(playerId);\n  console.log(silentPlayers);\n  useEffect(() => {\n    console.log(\"Working....\");\n    fetchSilent();\n  }, []);\n  const [id, playerData] = silentPlayers;\n  console.log(id);\n  console.log(playerData);\n  return (\n    <div>\n      <h1>Silent</h1>\n      {/* {silentPlayers.map((player) => {\n        <SilentBiddingHelper\n          key={player.id}\n          player={player.data}\n          playerId={playerId}\n        />;\n      })} */}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    playerB: state.playerB,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    Bids: (playerId, biddingprice) => dispatch(Bids(playerId, biddingprice)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SilentBidding);\n"]},"metadata":{},"sourceType":"module"}
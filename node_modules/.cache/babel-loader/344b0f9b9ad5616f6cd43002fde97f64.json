{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveBiddingHelper = ({\n  player,\n  playerId,\n  teamId\n}) => {\n  _s();\n\n  const [biddingValue, setbiddingValue] = useState(0);\n  const [bidDisplay, setbidDisplay] = useState([]);\n  const [teamBids, setteamBids] = useState(null);\n\n  const sendBid = e => {\n    e.preventDefault();\n\n    if (teamBids !== null) {\n      setteamBids([{\n        biddingprice: player.helperbid,\n        timestamp: firebase.firestore.Timestamp.now()\n      }, ...teamBids]);\n    } else {\n      setteamBids([{\n        biddingprice: player.helperbid,\n        timestamp: firebase.firestore.Timestamp.now()\n      }]);\n    }\n\n    const ref = db.collection(\"players\").doc(playerId).collection(\"Bids\").doc(teamId);\n    ref.get().then(snapshot => {\n      if (snapshot.exists) {\n        console.log();\n        ref.set({\n          bid: teamBids\n        });\n      } else {\n        ref.set({\n          bid: [{\n            biddingprice: player.helperbid,\n            timestamp: firebase.firestore.Timestamp.now()\n          }]\n        });\n      }\n    });\n    /* if (teamBids !== null) {\n      db.collection(\"players\")\n        .doc(playerId)\n        .collection(\"Bids\")\n        .doc(teamId)\n        .set({\n          bid: teamBids,\n        });\n    } else {\n      db.collection(\"players\")\n        .doc(playerId)\n        .collection(\"Bids\")\n        .doc(teamId)\n        .set({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n    } */\n\n    console.log(\"Maxbid:\", player.maxbid);\n    console.log(\"Price:\", player.helperbid);\n\n    if (parseInt(player.maxbid) < parseInt(player.helperbid) || parseInt(player.maxbid) === parseInt(player.baseprice)) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: player.helperbid,\n        maxbidBy: teamId\n      });\n    }\n\n    const ref2 = db.collection(\"players\").doc(playerId);\n    if (parseInt(player.helperbid) < 200 && parseInt(player.helperbid) >= 20) ref2.update({\n      helperbid: parseInt(player.helperbid) + 10\n    });else if (parseInt(player.helperbid) < 500 && parseInt(player.helperbid) >= 200) {\n      ref2.update({\n        helperbid: parseInt(player.helperbid) + 20\n      }); //setbiddingValue(parseInt(player.helperbid) + 20);\n    } else {\n      ref2.update({\n        helperbid: parseInt(player.helperbid) + 25\n      }); //setbiddingValue(parseInt(player.helperbid) + 25);\n    }\n  };\n\n  console.log(teamBids); // console.log(\"ID:\", playerId);\n\n  useEffect(() => {\n    db.collection(\"players\").doc(playerId).onSnapshot(doc => {\n      if (doc.data().maxbid !== null) setbiddingValue(doc.data().maxbid);\n    });\n  }, [biddingValue]);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").onSnapshot(snapshot => {\n      snapshot.docs.map(doc => {\n        if (doc.exists) {\n          doc.data().bid.map(b => {\n            // console.log(doc.id);\n            // console.log(\"bid:\", b);\n            setbidDisplay([{\n              id: doc.id,\n              biddingprice: b.biddingprice,\n              timestamp: b.timestamp\n            }, ...bidDisplay]);\n          });\n        }\n      });\n    });\n  }, []); // console.log(bidDisplay);\n\n  console.log(player.helperbid); // console.log(teamBids);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [player.name, \"(\", player.age, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: player.Image,\n      alt: \"No Image\",\n      height: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Runs: \", player.Runs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Batting Average: \", player.Batavg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Strike Rate: \", player.strikerate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Price: \", player.baseprice, \" lakhs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wickets: \", player.wickets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Economy: \", player.economy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bowling Average: \", player.Bowlavg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: sendBid,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: player.helperbid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), \"Bid\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), bidDisplay !== null ? bidDisplay.map(bid => {\n      return (\n        /*#__PURE__*/\n        // console.log(\"bid:\", bid),\n        _jsxDEV(BiddingHistory, {\n          bid: bid\n        }, bid.id ? bid.id : 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)\n      );\n    }) : console.log(\"No bids\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveBiddingHelper, \"tpJe1CIxmZK5vZxpw093RieCies=\");\n\n_c = LiveBiddingHelper;\nexport default LiveBiddingHelper;\n/* const query = db\n      .collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId);\n\n    query.get().then((snapshot) => {\n      if (snapshot.exists) {\n        query.add({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      } else {\n        query.set({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      }\n    }); */\n///Set bid to database\n\n/* db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId)\n      .onSnapshot((snapshot) => {\n        if (snapshot.exists) {\n          snapshot.data().bid.map((b) => {\n            if (teamBids === null) {\n              setteamBids([b]);\n              // console.log(\"bid\", b);\n            } else {\n              teamBids.map((bi) => {\n                if (bi.biddingprice !== b.biddingprice) {\n                  console.log(bi.biddingprice !== b.biddingprice);\n                  console.log(\"bi:\", bi.biddingprice);\n                  console.log(\"b:\", b.biddingprice);\n                  setteamBids([...teamBids, b]);\n                }\n              });\n            }\n          });\n        }\n      }); */\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveBiddingHelper\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js"],"names":["React","useEffect","useState","db","firebase","BiddingHistory","LiveBiddingHelper","player","playerId","teamId","biddingValue","setbiddingValue","bidDisplay","setbidDisplay","teamBids","setteamBids","sendBid","e","preventDefault","biddingprice","helperbid","timestamp","firestore","Timestamp","now","ref","collection","doc","get","then","snapshot","exists","console","log","set","bid","maxbid","parseInt","baseprice","update","maxbidBy","ref2","onSnapshot","data","docs","map","b","id","name","age","Image","Runs","Batavg","strikerate","wickets","economy","Bowlavg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nconst LiveBiddingHelper = ({ player, playerId, teamId }) => {\n  const [biddingValue, setbiddingValue] = useState(0);\n  const [bidDisplay, setbidDisplay] = useState([]);\n  const [teamBids, setteamBids] = useState(null);\n\n  const sendBid = (e) => {\n    e.preventDefault();\n\n    if (teamBids !== null) {\n      setteamBids([\n        {\n          biddingprice: player.helperbid,\n          timestamp: firebase.firestore.Timestamp.now(),\n        },\n        ...teamBids,\n      ]);\n    } else {\n      setteamBids([\n        {\n          biddingprice: player.helperbid,\n          timestamp: firebase.firestore.Timestamp.now(),\n        },\n      ]);\n    }\n\n    const ref = db\n      .collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId);\n\n    ref.get().then((snapshot) => {\n      if (snapshot.exists) {\n        console.log();\n        ref.set({\n          bid: teamBids,\n        });\n      } else {\n        ref.set({\n          bid: [\n            {\n              biddingprice: player.helperbid,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      }\n    });\n    /* if (teamBids !== null) {\n      db.collection(\"players\")\n        .doc(playerId)\n        .collection(\"Bids\")\n        .doc(teamId)\n        .set({\n          bid: teamBids,\n        });\n    } else {\n      db.collection(\"players\")\n        .doc(playerId)\n        .collection(\"Bids\")\n        .doc(teamId)\n        .set({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n    } */\n\n    console.log(\"Maxbid:\", player.maxbid);\n    console.log(\"Price:\", player.helperbid);\n    if (\n      parseInt(player.maxbid) < parseInt(player.helperbid) ||\n      parseInt(player.maxbid) === parseInt(player.baseprice)\n    ) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: player.helperbid,\n        maxbidBy: teamId,\n      });\n    }\n    const ref2 = db.collection(\"players\").doc(playerId);\n    if (parseInt(player.helperbid) < 200 && parseInt(player.helperbid) >= 20)\n      ref2.update({\n        helperbid: parseInt(player.helperbid) + 10,\n      });\n    else if (\n      parseInt(player.helperbid) < 500 &&\n      parseInt(player.helperbid) >= 200\n    ) {\n      ref2.update({\n        helperbid: parseInt(player.helperbid) + 20,\n      });\n      //setbiddingValue(parseInt(player.helperbid) + 20);\n    } else {\n      ref2.update({\n        helperbid: parseInt(player.helperbid) + 25,\n      });\n      //setbiddingValue(parseInt(player.helperbid) + 25);\n    }\n  };\n  console.log(teamBids);\n  // console.log(\"ID:\", playerId);\n  useEffect(() => {\n    db.collection(\"players\")\n      .doc(playerId)\n      .onSnapshot((doc) => {\n        if (doc.data().maxbid !== null) setbiddingValue(doc.data().maxbid);\n      });\n  }, [biddingValue]);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .onSnapshot((snapshot) => {\n        snapshot.docs.map((doc) => {\n          if (doc.exists) {\n            doc.data().bid.map((b) => {\n              // console.log(doc.id);\n              // console.log(\"bid:\", b);\n              setbidDisplay([\n                {\n                  id: doc.id,\n                  biddingprice: b.biddingprice,\n                  timestamp: b.timestamp,\n                },\n                ...bidDisplay,\n              ]);\n            });\n          }\n        });\n      });\n  }, []);\n  // console.log(bidDisplay);\n  console.log(player.helperbid);\n  // console.log(teamBids);\n  return (\n    <div>\n      <h2>\n        {player.name}({player.age})\n      </h2>\n      <img src={player.Image} alt=\"No Image\" height=\"500px\"></img>\n      <span>\n        <p>Runs: {player.Runs}</p>\n        <p>Batting Average: {player.Batavg}</p>\n        <p>Strike Rate: {player.strikerate}</p>\n        <p>Base Price: {player.baseprice} lakhs</p>\n      </span>\n      <span>\n        <p>Wickets: {player.wickets}</p>\n        <p>Economy: {player.economy}</p>\n        <p>Bowling Average: {player.Bowlavg}</p>\n      </span>\n      <form>\n        <button type=\"submit\" onClick={sendBid}>\n          <p>{player.helperbid}</p>Bid\n        </button>\n      </form>\n      {bidDisplay !== null\n        ? bidDisplay.map((bid) => {\n            return (\n              // console.log(\"bid:\", bid),\n              <BiddingHistory key={bid.id ? bid.id : 0} bid={bid} />\n            );\n          })\n        : console.log(\"No bids\")}\n    </div>\n  );\n};\n\nexport default LiveBiddingHelper;\n\n/* const query = db\n      .collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId);\n\n    query.get().then((snapshot) => {\n      if (snapshot.exists) {\n        query.add({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      } else {\n        query.set({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      }\n    }); */\n\n///Set bid to database\n\n/* db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId)\n      .onSnapshot((snapshot) => {\n        if (snapshot.exists) {\n          snapshot.data().bid.map((b) => {\n            if (teamBids === null) {\n              setteamBids([b]);\n              // console.log(\"bid\", b);\n            } else {\n              teamBids.map((bi) => {\n                if (bi.biddingprice !== b.biddingprice) {\n                  console.log(bi.biddingprice !== b.biddingprice);\n                  console.log(\"bi:\", bi.biddingprice);\n                  console.log(\"b:\", b.biddingprice);\n                  setteamBids([...teamBids, b]);\n                }\n              });\n            }\n          });\n        }\n      }); */\n"]},"metadata":{},"sourceType":"module"}
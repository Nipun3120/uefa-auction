{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: \"LOGIN_SUCCESS\"\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"LOGIN_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: \"SIGNOUT_SUCCESS\"\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      return firestore.collection(\"users\").doc(resp.user.uid).set({\n        teamName: newUser.teamName,\n        initials: newUser.teamName[0] + newUser.teamName[1],\n        players: []\n      });\n    }).then(() => {\n      dispatch({\n        type: \"SIGNUP_SUCCESS\"\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"SIGNUP_ERROR\",\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/store/actions/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","teamName","initials","players"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAIC,WAAD,IAAiB;AACrC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAAyC;AAC9C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CACLC,IADH,GAEGC,0BAFH,CAE8BN,WAAW,CAACO,KAF1C,EAEiDP,WAAW,CAACQ,QAF7D,EAGGC,IAHH,CAGQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA;AAAvB,OAAD,CAAR;AACD,KARH;AASD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,SAAO,CAACZ,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAAyC;AAC9C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CACLC,IADH,GAEGQ,OAFH,GAGGJ,IAHH,CAGQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KALH;AAMD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMI,MAAM,GAAIC,OAAD,IAAa;AACjC,SAAO,CAACd,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAea,IAAAA;AAAf,GAArB,KAAuD;AAC5D,UAAMZ,QAAQ,GAAGD,WAAW,EAA5B;AACA,UAAMc,SAAS,GAAGD,YAAY,EAA9B;AAEAZ,IAAAA,QAAQ,CACLC,IADH,GAEGa,8BAFH,CAEkCH,OAAO,CAACR,KAF1C,EAEiDQ,OAAO,CAACP,QAFzD,EAGGC,IAHH,CAGSU,IAAD,IAAU;AACd,aAAOF,SAAS,CACbG,UADI,CACO,OADP,EAEJC,GAFI,CAEAF,IAAI,CAACG,IAAL,CAAUC,GAFV,EAGJC,GAHI,CAGA;AACHC,QAAAA,QAAQ,EAAEV,OAAO,CAACU,QADf;AAEHC,QAAAA,QAAQ,EAAEX,OAAO,CAACU,QAAR,CAAiB,CAAjB,IAAsBV,OAAO,CAACU,QAAR,CAAiB,CAAjB,CAF7B;AAGHE,QAAAA,OAAO,EAAE;AAHN,OAHA,CAAP;AAQD,KAZH,EAaGlB,IAbH,CAaQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAfH,EAgBGC,KAhBH,CAgBUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA;AAAxB,OAAD,CAAR;AACD,KAlBH;AAmBD,GAvBD;AAwBD,CAzBM","sourcesContent":["export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            teamName: newUser.teamName,\n            initials: newUser.teamName[0] + newUser.teamName[1],\n            players: [],\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/uefa-auction/src/container/Admin/PlayerSlots.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport AllSilentPlayers from \"./AllSilentPlayers\";\nimport PlayerSlotsHelper from \"./PlayerSlotsHelper\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerSlots = ({\n  auth\n}) => {\n  _s();\n\n  const [showPlayers, setShowPlayers] = useState([]);\n  const [fetchClass, setFetchClass] = useState(\"show\");\n  const [classAndAssign, setclassAndAssign] = useState(\"\");\n\n  const changeslot = e => {\n    e.preventDefault();\n    setShowPlayers([]);\n    db.collection(\"players\").where(\"category\", \"==\", \"silent\").where(\"class\", \"==\", fetchClass).get().then(snapshot => {\n      //if (snapshot.exists) {\n      snapshot.docs.map(doc => {\n        setShowPlayers(showPlayers => [...showPlayers, {\n          id: doc.id,\n          data: doc.data()\n        }]);\n        db.collection(\"players\").doc(doc.id).update({\n          class: \"show\"\n        });\n        /* setShowPlayers((showPlayers) => [\n            ...showPlayers,\n            { id: doc.id, data: doc.data() },\n          ]); */\n      }); //}\n    });\n  };\n\n  const changeslot_assignteam = e => {\n    e.preventDefault();\n    setShowPlayers([]);\n    db.collection(\"refresh\").doc(\"silent\").update({\n      value: \"true\"\n    });\n    db.collection(\"players\").where(\"category\", \"==\", \"silent\").where(\"class\", \"==\", \"show\").get().then(snapshot => {\n      //if (snapshot.exists) {\n      snapshot.docs.map(doc => {\n        //console.log(doc.data());\n        setShowPlayers(showPlayers => [...showPlayers, {\n          id: doc.id,\n          data: doc.data()\n        }]);\n        db.collection(\"players\").doc(doc.data().name).update({\n          class: classAndAssign,\n          team: doc.data().maxbidBy,\n          status: \"close\"\n        });\n\n        if (doc.data().maxbidBy !== \"\") {\n          const ref3 = db.collection(\"users\").doc(doc.data().maxbidBy);\n          ref3.get().then(snapshot => {\n            if (snapshot.exists) {\n              ref3.update({\n                teamBalance: parseInt(snapshot.data().teamBalance) - parseInt(doc.data().maxbid)\n              });\n            }\n          });\n        }\n      }); //}\n    });\n  };\n\n  if (auth.uid !== \"HwV4GQfs7kQk6NAGxeHwsInIMfs2\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n  console.log(showPlayers);\n  /* console.log(fetchClass);\n  console.log(classAndAssign); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"A to Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            e.preventDefault();\n            setFetchClass(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeslot,\n          children: \"Change Slot to show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Show to A but enter A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            e.preventDefault();\n            setclassAndAssign(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeslot_assignteam,\n          children: \"Change Slot and Assign Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"maxbid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"maxbidBy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), showPlayers.map(player => {\n      return player ? /*#__PURE__*/_jsxDEV(PlayerSlotsHelper, {\n        player: player\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\\"No Silent player with class Given\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlayerSlots, \"MtV5MbYu4A2RkwhINyMxLHfg+WQ=\");\n\n_c = PlayerSlots;\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapStateToProps)(PlayerSlots);\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerSlots\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/uefa-auction/src/container/Admin/PlayerSlots.js"],"names":["React","useEffect","useState","db","AllSilentPlayers","PlayerSlotsHelper","connect","Redirect","PlayerSlots","auth","showPlayers","setShowPlayers","fetchClass","setFetchClass","classAndAssign","setclassAndAssign","changeslot","e","preventDefault","collection","where","get","then","snapshot","docs","map","doc","id","data","update","class","changeslot_assignteam","value","name","team","maxbidBy","status","ref3","exists","teamBalance","parseInt","maxbid","uid","console","log","target","player","mapStateToProps","state","authError","firebase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,uBAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,MAAD,CAA5C;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;;AACA,QAAMc,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAR,IAAAA,EAAE,CAACgB,UAAH,CAAc,SAAd,EACGC,KADH,CACS,UADT,EACqB,IADrB,EAC2B,QAD3B,EAEGA,KAFH,CAES,OAFT,EAEkB,IAFlB,EAEwBR,UAFxB,EAGGS,GAHH,GAIGC,IAJH,CAISC,QAAD,IAAc;AAClB;AACAA,MAAAA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAAS;AACzBf,QAAAA,cAAc,CAAED,WAAD,IAAiB,CAC9B,GAAGA,WAD2B,EAE9B;AAAEiB,UAAAA,EAAE,EAAED,GAAG,CAACC,EAAV;AAAcC,UAAAA,IAAI,EAAEF,GAAG,CAACE,IAAJ;AAApB,SAF8B,CAAlB,CAAd;AAIAzB,QAAAA,EAAE,CAACgB,UAAH,CAAc,SAAd,EAAyBO,GAAzB,CAA6BA,GAAG,CAACC,EAAjC,EAAqCE,MAArC,CAA4C;AAC1CC,UAAAA,KAAK,EAAE;AADmC,SAA5C;AAGA;AACV;AACA;AACA;AACS,OAZD,EAFkB,CAelB;AACD,KApBH;AAqBD,GAxBD;;AAyBA,QAAMC,qBAAqB,GAAId,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAR,IAAAA,EAAE,CAACgB,UAAH,CAAc,SAAd,EAAyBO,GAAzB,CAA6B,QAA7B,EAAuCG,MAAvC,CAA8C;AAC5CG,MAAAA,KAAK,EAAE;AADqC,KAA9C;AAGA7B,IAAAA,EAAE,CAACgB,UAAH,CAAc,SAAd,EACGC,KADH,CACS,UADT,EACqB,IADrB,EAC2B,QAD3B,EAEGA,KAFH,CAES,OAFT,EAEkB,IAFlB,EAEwB,MAFxB,EAGGC,GAHH,GAIGC,IAJH,CAISC,QAAD,IAAc;AAClB;AACAA,MAAAA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAAS;AACzB;AACAf,QAAAA,cAAc,CAAED,WAAD,IAAiB,CAC9B,GAAGA,WAD2B,EAE9B;AAAEiB,UAAAA,EAAE,EAAED,GAAG,CAACC,EAAV;AAAcC,UAAAA,IAAI,EAAEF,GAAG,CAACE,IAAJ;AAApB,SAF8B,CAAlB,CAAd;AAIAzB,QAAAA,EAAE,CAACgB,UAAH,CAAc,SAAd,EAAyBO,GAAzB,CAA6BA,GAAG,CAACE,IAAJ,GAAWK,IAAxC,EAA8CJ,MAA9C,CAAqD;AACnDC,UAAAA,KAAK,EAAEhB,cAD4C;AAEnDoB,UAAAA,IAAI,EAAER,GAAG,CAACE,IAAJ,GAAWO,QAFkC;AAGnDC,UAAAA,MAAM,EAAE;AAH2C,SAArD;;AAKA,YAAIV,GAAG,CAACE,IAAJ,GAAWO,QAAX,KAAwB,EAA5B,EAAgC;AAC9B,gBAAME,IAAI,GAAGlC,EAAE,CAACgB,UAAH,CAAc,OAAd,EAAuBO,GAAvB,CAA2BA,GAAG,CAACE,IAAJ,GAAWO,QAAtC,CAAb;AAEAE,UAAAA,IAAI,CAAChB,GAAL,GAAWC,IAAX,CAAiBC,QAAD,IAAc;AAC5B,gBAAIA,QAAQ,CAACe,MAAb,EAAqB;AACnBD,cAAAA,IAAI,CAACR,MAAL,CAAY;AACVU,gBAAAA,WAAW,EACTC,QAAQ,CAACjB,QAAQ,CAACK,IAAT,GAAgBW,WAAjB,CAAR,GACAC,QAAQ,CAACd,GAAG,CAACE,IAAJ,GAAWa,MAAZ;AAHA,eAAZ;AAKD;AACF,WARD;AASD;AACF,OAxBD,EAFkB,CA2BlB;AACD,KAhCH;AAiCD,GAvCD;;AAwCA,MAAIhC,IAAI,CAACiC,GAAL,KAAa,8BAAjB,EACE,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AAEFC,EAAAA,OAAO,CAACC,GAAR,CAAYlC,WAAZ;AACA;AACF;;AACE,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAGO,CAAD,IAAO;AACfA,YAAAA,CAAC,CAACC,cAAF;AACAL,YAAAA,aAAa,CAACI,CAAC,CAAC4B,MAAF,CAASb,KAAV,CAAb;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAQ,UAAA,OAAO,EAAEhB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfA,YAAAA,CAAC,CAACC,cAAF;AACAH,YAAAA,iBAAiB,CAACE,CAAC,CAAC4B,MAAF,CAASb,KAAV,CAAjB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAQ,UAAA,OAAO,EAAED,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA2BE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3BF,EAuCGrB,WAAW,CAACe,GAAZ,CAAiBqB,MAAD,IAAY;AAC3B,aAAOA,MAAM,gBACX,QAAC,iBAAD;AAAmC,QAAA,MAAM,EAAEA;AAA3C,SAAwBA,MAAM,CAACnB,EAA/B;AAAA;AAAA;AAAA;AAAA,cADW,gBAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAKD,KANA,CAvCH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,CA5HD;;GAAMnB,W;;KAAAA,W;;AA8HN,MAAMuC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACvC,IAAN,CAAWwC,SADjB;AAELxC,IAAAA,IAAI,EAAEuC,KAAK,CAACE,QAAN,CAAezC;AAFhB,GAAP;AAID,CALD;;AAMA,eAAeH,OAAO,CAACyC,eAAD,CAAP,CAAyBvC,WAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport AllSilentPlayers from \"./AllSilentPlayers\";\nimport PlayerSlotsHelper from \"./PlayerSlotsHelper\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nconst PlayerSlots = ({ auth }) => {\n  const [showPlayers, setShowPlayers] = useState([]);\n  const [fetchClass, setFetchClass] = useState(\"show\");\n  const [classAndAssign, setclassAndAssign] = useState(\"\");\n  const changeslot = (e) => {\n    e.preventDefault();\n    setShowPlayers([]);\n    db.collection(\"players\")\n      .where(\"category\", \"==\", \"silent\")\n      .where(\"class\", \"==\", fetchClass)\n      .get()\n      .then((snapshot) => {\n        //if (snapshot.exists) {\n        snapshot.docs.map((doc) => {\n          setShowPlayers((showPlayers) => [\n            ...showPlayers,\n            { id: doc.id, data: doc.data() },\n          ]);\n          db.collection(\"players\").doc(doc.id).update({\n            class: \"show\",\n          });\n          /* setShowPlayers((showPlayers) => [\n              ...showPlayers,\n              { id: doc.id, data: doc.data() },\n            ]); */\n        });\n        //}\n      });\n  };\n  const changeslot_assignteam = (e) => {\n    e.preventDefault();\n    setShowPlayers([]);\n    db.collection(\"refresh\").doc(\"silent\").update({\n      value: \"true\",\n    });\n    db.collection(\"players\")\n      .where(\"category\", \"==\", \"silent\")\n      .where(\"class\", \"==\", \"show\")\n      .get()\n      .then((snapshot) => {\n        //if (snapshot.exists) {\n        snapshot.docs.map((doc) => {\n          //console.log(doc.data());\n          setShowPlayers((showPlayers) => [\n            ...showPlayers,\n            { id: doc.id, data: doc.data() },\n          ]);\n          db.collection(\"players\").doc(doc.data().name).update({\n            class: classAndAssign,\n            team: doc.data().maxbidBy,\n            status: \"close\",\n          });\n          if (doc.data().maxbidBy !== \"\") {\n            const ref3 = db.collection(\"users\").doc(doc.data().maxbidBy);\n\n            ref3.get().then((snapshot) => {\n              if (snapshot.exists) {\n                ref3.update({\n                  teamBalance:\n                    parseInt(snapshot.data().teamBalance) -\n                    parseInt(doc.data().maxbid),\n                });\n              }\n            });\n          }\n        });\n        //}\n      });\n  };\n  if (auth.uid !== \"HwV4GQfs7kQk6NAGxeHwsInIMfs2\")\n    return <Redirect to=\"/login\" />;\n\n  console.log(showPlayers);\n  /* console.log(fetchClass);\n  console.log(classAndAssign); */\n  return (\n    <div>\n      <form>\n        <div>\n          <h3>A to Show</h3>\n          <input\n            type=\"text\"\n            onChange={(e) => {\n              e.preventDefault();\n              setFetchClass(e.target.value);\n            }}\n          />\n          <button onClick={changeslot}>Change Slot to show</button>\n        </div>\n        <div>\n          <h3>Show to A but enter A</h3>\n          <input\n            type=\"text\"\n            onChange={(e) => {\n              e.preventDefault();\n              setclassAndAssign(e.target.value);\n            }}\n          />\n          <button onClick={changeslot_assignteam}>\n            Change Slot and Assign Team\n          </button>\n        </div>\n      </form>\n      <table>\n        <tr>\n          <th>name</th>\n          <th>category</th>\n          <th>status</th>\n          <th>display</th>\n          <th>class</th>\n          <th>maxbid</th>\n          <th>maxbidBy</th>\n          <th>team</th>\n        </tr>\n      </table>\n      {showPlayers.map((player) => {\n        return player ? (\n          <PlayerSlotsHelper key={player.id} player={player} />\n        ) : (\n          <h2>\"No Silent player with class Given\"</h2>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\nexport default connect(mapStateToProps)(PlayerSlots);\n"]},"metadata":{},"sourceType":"module"}
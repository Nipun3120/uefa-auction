{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/Dashboards/PlayerSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport Categories from \"./Categories\";\nimport Players from \"./Players\"; ///\n\nimport \"../../assets/css/dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerSection = ({\n  teamId\n}) => {\n  _s();\n\n  const [categories, setCategories] = useState([]); // let categories = [];\n\n  const [team, setTeam] = useState([]);\n  const [AllPlayers, setAllPlayers] = useState([]);\n  const [filteredPlayers, setFilteredPlayers] = useState([]);\n\n  const fetchPlayers = () => {\n    console.log(\"Fetching Players\");\n    db.collection(\"players\").onSnapshot(snapshot => {\n      snapshot.docs.forEach(doc => {\n        //console.log(doc.data());\n        setAllPlayers(AllPlayers => [...AllPlayers, {\n          id: doc.id,\n          data: doc.data()\n        }]);\n      });\n    });\n  };\n\n  const fetchTeam = () => {\n    db.collection(\"users\").get().then(snapshot => {\n      snapshot.docs.map(doc => {\n        if (categories === null) {\n          setCategories({\n            id: doc.id,\n            data: doc.data().teamName\n          });\n        } else {\n          setCategories(categories => [...categories, {\n            id: doc.id,\n            data: doc.data().teamName\n          }]);\n        }\n      });\n      /* const result = snapshot.docs.map((doc) => ({\n      id: doc.id,\n      data: doc.data(),\n      }));\n      result.map((res) => {\n      console.log(res.data);\n      // categories.push([res.data.teamName]);\n      }); */\n    });\n  };\n\n  const filterPlayers = (category, id) => {\n    //console.log(\"C\", id);\n    const filterPlayers = AllPlayers.filter(player => player.data.team === id);\n    setFilteredPlayers(filterPlayers);\n  }; //console.log(AllPlayers);\n\n\n  useEffect(() => {\n    fetchTeam();\n    fetchPlayers();\n  }, []);\n  useEffect(() => {\n    console.log(\"working!!!\");\n    console.log(teamId);\n    const filterperson = AllPlayers.filter(player => player.data.team === teamId);\n    setFilteredPlayers(filterperson);\n  }, []);\n  console.log(filteredPlayers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [categories === null ? console.log(\"No category\") : /*#__PURE__*/_jsxDEV(Categories, {\n      filterPlayers: filterPlayers,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Players, {\n      players: filteredPlayers ? filteredPlayers : console.log(\"No player Available\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlayerSection, \"ysj1vRXMvYMVQVS6z5T1nI1EThA=\");\n\n_c = PlayerSection;\nexport default PlayerSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerSection\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/Dashboards/PlayerSection.js"],"names":["React","useEffect","useState","db","Categories","Players","PlayerSection","teamId","categories","setCategories","team","setTeam","AllPlayers","setAllPlayers","filteredPlayers","setFilteredPlayers","fetchPlayers","console","log","collection","onSnapshot","snapshot","docs","forEach","doc","id","data","fetchTeam","get","then","map","teamName","filterPlayers","category","filter","player","filterperson"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport Categories from \"./Categories\";\nimport Players from \"./Players\";\n\n///\nimport \"../../assets/css/dashboard.css\";\n\nconst PlayerSection = ({ teamId }) => {\n  const [categories, setCategories] = useState([]);\n  // let categories = [];\n  const [team, setTeam] = useState([]);\n  const [AllPlayers, setAllPlayers] = useState([]);\n  const [filteredPlayers, setFilteredPlayers] = useState([]);\n  const fetchPlayers = () => {\n    console.log(\"Fetching Players\");\n    db.collection(\"players\").onSnapshot((snapshot) => {\n      snapshot.docs.forEach((doc) => {\n        //console.log(doc.data());\n        setAllPlayers((AllPlayers) => [\n          ...AllPlayers,\n          { id: doc.id, data: doc.data() },\n        ]);\n      });\n    });\n  };\n  const fetchTeam = () => {\n    db.collection(\"users\")\n      .get()\n      .then((snapshot) => {\n        snapshot.docs.map((doc) => {\n          if (categories === null) {\n            setCategories({ id: doc.id, data: doc.data().teamName });\n          } else {\n            setCategories((categories) => [\n              ...categories,\n              {\n                id: doc.id,\n                data: doc.data().teamName,\n              },\n            ]);\n          }\n        });\n\n        /* const result = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        data: doc.data(),\n      }));\n      result.map((res) => {\n        console.log(res.data);\n        // categories.push([res.data.teamName]);\n      }); */\n      });\n  };\n\n  const filterPlayers = (category, id) => {\n    //console.log(\"C\", id);\n\n    const filterPlayers = AllPlayers.filter(\n      (player) => player.data.team === id\n    );\n    setFilteredPlayers(filterPlayers);\n  };\n  //console.log(AllPlayers);\n\n  useEffect(() => {\n    fetchTeam();\n    fetchPlayers();\n  }, []);\n  useEffect(() => {\n    console.log(\"working!!!\");\n    console.log(teamId);\n    const filterperson = AllPlayers.filter(\n      (player) => player.data.team === teamId\n    );\n    setFilteredPlayers(filterperson);\n  }, []);\n\n  console.log(filteredPlayers);\n  return (\n    <div>\n      {categories === null ? (\n        console.log(\"No category\")\n      ) : (\n        <Categories filterPlayers={filterPlayers} categories={categories} />\n      )}\n      <Players\n        players={\n          filteredPlayers ? filteredPlayers : console.log(\"No player Available\")\n        }\n      />\n    </div>\n  );\n};\n\nexport default PlayerSection;\n"]},"metadata":{},"sourceType":"module"}
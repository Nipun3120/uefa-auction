{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: \"LOGIN_SUCCESS\"\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"LOGIN_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: \"SIGNOUT_SUCCESS\"\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      return firestore.collection(\"users\").doc(resp.user.uid).set({\n        teamName: newUser.teamName,\n        teamBalance: 8000,\n        initials: newUser.initials,\n        players: []\n      });\n    }).then(() => {\n      dispatch({\n        type: \"SIGNUP_SUCCESS\"\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"SIGNUP_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const AddPlayer = player => {\n  console.log(player);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.then(resp => {\n      return firestore.collection(\"players\").doc(player.name).set({\n        name: player.name,\n        age: player.age,\n        baseprice: player.baseprice,\n        Batavg: player.Batavg,\n        Image: player.Image,\n        Runs: player.Runs,\n        strikerate: player.strikerate,\n        Bowlavg: player.Bowlavg,\n        wickets: player.wickets,\n        economy: player.economy,\n        category: player.category,\n        display: player.display,\n        status: player.status,\n        maxbid: player.maxbid,\n        maxbidBy: player.maxbidBy,\n        team: player.team,\n        class: player.class\n      });\n    }).then(() => {\n      dispatch({\n        type: \"ADD_PLAYER_SUCCESS\"\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"ADD_PLAYER_ERROR\",\n        err\n      });\n    });\n  };\n};\n_c = AddPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlayer\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/store/actions/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","teamName","teamBalance","initials","players","AddPlayer","player","console","log","name","age","baseprice","Batavg","Image","Runs","strikerate","Bowlavg","wickets","economy","category","display","status","maxbid","maxbidBy","team","class"],"mappings":"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","sourcesContent":["export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore.collection(\"users\").doc(resp.user.uid).set({\n          teamName: newUser.teamName,\n          teamBalance: 8000,\n          initials: newUser.initials,\n          players: [],\n        });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n\nexport const AddPlayer = (player) => {\n  console.log(player);\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase\n      .then((resp) => {\n        return firestore.collection(\"players\").doc(player.name).set({\n          name: player.name,\n          age: player.age,\n          baseprice: player.baseprice,\n          Batavg: player.Batavg,\n          Image: player.Image,\n          Runs: player.Runs,\n          strikerate: player.strikerate,\n          Bowlavg: player.Bowlavg,\n          wickets: player.wickets,\n          economy: player.economy,\n          category: player.category,\n          display: player.display,\n          status: player.status,\n          maxbid: player.maxbid,\n          maxbidBy: player.maxbidBy,\n          team: player.team,\n          class: player.class,\n        });\n      })\n      .then(() => {\n        dispatch({ type: \"ADD_PLAYER_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"ADD_PLAYER_ERROR\", err });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
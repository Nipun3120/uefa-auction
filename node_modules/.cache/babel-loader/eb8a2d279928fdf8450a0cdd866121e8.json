{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/conatainer/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { teamStats } from \"../store/actions/playerActions\";\nimport { db } from \"../config/Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  auth\n}) => {\n  _s();\n\n  const [team, setTeam] = useState(\"\");\n  if (!auth.uid) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/signIn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 25\n  }, this);\n\n  const fetchTeam = async () => {\n    /*  const response=db.collection(\"users\")\n    .doc(auth.uid);\n    const data=await response.get();\n    console.log(data) */\n    db.collection(\"users\").onSnapshot(snapshot => {\n      console.log(snapshot.docs.map(doc => {\n        doc.data();\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: fetchTeam,\n      children: \"Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: auth.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"cTukps6zNiJDJLhTeT0p7bp98qo=\");\n\n_c = Dashboard;\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n}; */\n\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/conatainer/Dashboard.js"],"names":["React","useState","useEffect","connect","Redirect","teamStats","db","Dashboard","auth","team","setTeam","uid","fetchTeam","collection","onSnapshot","snapshot","console","log","docs","map","doc","data","mapStateToProps","state","authError","firebase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,EAAT,QAAmB,oBAAnB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACO,IAAI,CAACG,GAAV,EAAe,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEf,QAAMC,SAAS,GAAG,YAAY;AAC5B;AACJ;AACA;AACA;AAEIN,IAAAA,EAAE,CAACO,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAmCC,QAAD,IAAc;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CACEF,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAAS;AACzBA,QAAAA,GAAG,CAACC,IAAJ;AACD,OAFD,CADF;AAKD,KAND;AAOD,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAET,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAKJ,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3BD;;GAAMJ,S;;KAAAA,S;;AA6BN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACf,IAAN,CAAWgB,SADjB;AAELhB,IAAAA,IAAI,EAAEe,KAAK,CAACE,QAAN,CAAejB;AAFhB,GAAP;AAID,CALD;AAOA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,OAAO,CAACmB,eAAD,CAAP,CAAyBf,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { teamStats } from \"../store/actions/playerActions\";\nimport { db } from \"../config/Firebase\";\n\nconst Dashboard = ({ auth }) => {\n  const [team, setTeam] = useState(\"\");\n  if (!auth.uid) return <Redirect to=\"/signIn\" />;\n\n  const fetchTeam = async () => {\n    /*  const response=db.collection(\"users\")\n    .doc(auth.uid);\n    const data=await response.get();\n    console.log(data) */\n\n    db.collection(\"users\").onSnapshot((snapshot) => {\n      console.log(\n        snapshot.docs.map((doc) => {\n          doc.data();\n        })\n      );\n    });\n  };\n\n  return (\n    <div>\n      <button type=\"submit\" onClick={fetchTeam}>\n        Fetch\n      </button>\n      <h1>{auth.uid}</h1>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n}; */\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}
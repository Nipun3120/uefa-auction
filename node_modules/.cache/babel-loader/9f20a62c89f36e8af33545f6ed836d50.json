{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nimport { Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveBiddingHelper = ({\n  player,\n  playerId,\n  teamId\n}) => {\n  _s();\n\n  const [biddingValue, setbiddingValue] = useState(parseInt(player.maxbid));\n  const [bidDisplay, setbidDisplay] = useState([]);\n  const [balance, setBalance] = useState(0);\n  console.log(teamId);\n\n  const sendBid = e => {\n    e.preventDefault();\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").add({\n      teamId: teamId,\n      biddingprice: biddingValue,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }); //console.log(\"Maxbid:\", player.maxbid);\n    //console.log(\"Price:\", biddingValue);\n\n    if (parseInt(player.maxbid) < parseInt(biddingValue) || parseInt(player.maxbid) === parseInt(player.baseprice)) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId\n      });\n    } //const ref2 = db.collection(\"players\").doc(playerId);\n\n\n    if (parseInt(biddingValue) < 200 && parseInt(biddingValue) >= 20) setbiddingValue(parseInt(biddingValue) + 10);else if (parseInt(biddingValue) < 500 && parseInt(biddingValue) >= 200) {\n      setbiddingValue(parseInt(biddingValue) + 20);\n    } else {\n      setbiddingValue(parseInt(biddingValue) + 25);\n    }\n  }; // console.log(\"ID:\", playerId);\n\n\n  useEffect(() => {\n    ///setting bidding value\n    db.collection(\"players\").where(\"display\", \"==\", \"true\").where(\"category\", \"==\", \"live\").onSnapshot({\n      includeMetadataChanges: true\n    }, snapshot => {\n      snapshot.docs.map(doc => {\n        // console.log(doc.id, \"=>\", doc.data());\n        if (parseInt(doc.data().baseprice) === parseInt(doc.data().maxbid) && player.maxbidBy === \"\") {\n          console.log(\"equal\"); // setbiddingValue(parseInt(doc.data().baseprice));\n        } else if (parseInt(doc.data().baseprice) === parseInt(doc.data().maxbid) && player.maxbidBy !== \"\") {\n          if (parseInt(doc.data().maxbid) < 500 && parseInt(doc.data().maxbid) >= 200) {\n            setbiddingValue(parseInt(doc.data().maxbid) + 20);\n          }\n        } else {\n          if (parseInt(doc.data().maxbid) < 500 && parseInt(doc.data().maxbid) >= 200) {\n            setbiddingValue(parseInt(doc.data().maxbid) + 20);\n          } else {\n            setbiddingValue(parseInt(doc.data().maxbid) + 25);\n          }\n        }\n      });\n    });\n    /*  if (parseInt(player.baseprice) === parseInt(player.maxbid)) {\n      setbiddingValue(parseInt(player.baseprice));\n    } else {\n      if (parseInt(player.maxbid) < 200 && parseInt(player.maxbid) >= 20)\n        setbiddingValue(parseInt(player.maxbid) + 10);\n      else if (\n        parseInt(player.maxbid) < 500 &&\n        parseInt(player.maxbid) >= 200\n      ) {\n        setbiddingValue(parseInt(player.maxbid) + 20);\n      } else {\n        setbiddingValue(parseInt(player.maxbid) + 25);\n      }\n    }*/\n  }, [player.maxbidBy]);\n  useEffect(() => {\n    db.collection(\"users\").doc(teamId).onSnapshot(snapshot => {\n      if (snapshot.exists) {\n        setBalance(parseInt(snapshot.data().teamBalance));\n      }\n    });\n  }, []);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      setbidDisplay(snapshot.docs.map(doc => doc.data()));\n    });\n  }, []);\n  useEffect(() => {\n    if (player.status === \"close\") {\n      db.collection(\"players\").doc(player.name).update({\n        team: player.maxbidBy\n      });\n      const ref3 = db.collection(\"users\").doc(player.maxbidBy);\n      ref3.onSnapshot(snapshot => {\n        if (snapshot.exists) {\n          ref3.update({\n            teamBalance: parseInt(snapshot.data().teamBalance) - parseInt(player.maxbid)\n          });\n        }\n      });\n    }\n  }, [player.status]); //console.log(bidDisplay);\n\n  console.log(biddingValue);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      display: \"inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [player.name, \"(\", player.age, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: player.Image,\n        alt: \"No Image\",\n        height: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Runs: \", player.Runs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Batting Average: \", player.Batavg]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Strike Rate: \", player.strikerate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wickets: \", player.wickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Economy: \", player.economy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bowling Average: \", player.Bowlavg]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Price: \", player.baseprice, \" lakhs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: balance >= biddingValue ? [player.maxbidBy !== teamId ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: sendBid,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: biddingValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this), \"Bid\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: biddingValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this), \"Bid\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this)] : /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Not Enough Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: bidDisplay ? bidDisplay.map(bid => {\n        return /*#__PURE__*/_jsxDEV(BiddingHistory, {\n          bid: bid\n        }, bid.id ? bid.id : 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 22\n        }, this);\n      }) : console.log(\"No bids\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveBiddingHelper, \"8zTIbGSRnR6MVrz19RNTYzXulOw=\");\n\n_c = LiveBiddingHelper;\nexport default LiveBiddingHelper;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveBiddingHelper\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js"],"names":["React","useEffect","useState","db","firebase","BiddingHistory","Grid","LiveBiddingHelper","player","playerId","teamId","biddingValue","setbiddingValue","parseInt","maxbid","bidDisplay","setbidDisplay","balance","setBalance","console","log","sendBid","e","preventDefault","collection","doc","add","biddingprice","timestamp","firestore","FieldValue","serverTimestamp","baseprice","update","maxbidBy","where","onSnapshot","includeMetadataChanges","snapshot","docs","map","data","exists","teamBalance","orderBy","status","name","team","ref3","age","Image","Runs","Batavg","strikerate","wickets","economy","Bowlavg","bid","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nimport { Grid } from \"@material-ui/core\";\nconst LiveBiddingHelper = ({ player, playerId, teamId }) => {\n  const [biddingValue, setbiddingValue] = useState(parseInt(player.maxbid));\n  const [bidDisplay, setbidDisplay] = useState([]);\n  const [balance, setBalance] = useState(0);\n  console.log(teamId);\n\n  const sendBid = (e) => {\n    e.preventDefault();\n\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").add({\n      teamId: teamId,\n      biddingprice: biddingValue,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    //console.log(\"Maxbid:\", player.maxbid);\n    //console.log(\"Price:\", biddingValue);\n    if (\n      parseInt(player.maxbid) < parseInt(biddingValue) ||\n      parseInt(player.maxbid) === parseInt(player.baseprice)\n    ) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId,\n      });\n    }\n    //const ref2 = db.collection(\"players\").doc(playerId);\n    if (parseInt(biddingValue) < 200 && parseInt(biddingValue) >= 20)\n      setbiddingValue(parseInt(biddingValue) + 10);\n    else if (parseInt(biddingValue) < 500 && parseInt(biddingValue) >= 200) {\n      setbiddingValue(parseInt(biddingValue) + 20);\n    } else {\n      setbiddingValue(parseInt(biddingValue) + 25);\n    }\n  };\n\n  // console.log(\"ID:\", playerId);\n  useEffect(() => {\n    ///setting bidding value\n    db.collection(\"players\")\n      .where(\"display\", \"==\", \"true\")\n      .where(\"category\", \"==\", \"live\")\n      .onSnapshot({ includeMetadataChanges: true }, (snapshot) => {\n        snapshot.docs.map((doc) => {\n          // console.log(doc.id, \"=>\", doc.data());\n\n          if (\n            parseInt(doc.data().baseprice) === parseInt(doc.data().maxbid) &&\n            player.maxbidBy === \"\"\n          ) {\n            console.log(\"equal\");\n            // setbiddingValue(parseInt(doc.data().baseprice));\n          } else if (\n            parseInt(doc.data().baseprice) === parseInt(doc.data().maxbid) &&\n            player.maxbidBy !== \"\"\n          ) {\n            if (\n              parseInt(doc.data().maxbid) < 500 &&\n              parseInt(doc.data().maxbid) >= 200\n            ) {\n              setbiddingValue(parseInt(doc.data().maxbid) + 20);\n            }\n          } else {\n            if (\n              parseInt(doc.data().maxbid) < 500 &&\n              parseInt(doc.data().maxbid) >= 200\n            ) {\n              setbiddingValue(parseInt(doc.data().maxbid) + 20);\n            } else {\n              setbiddingValue(parseInt(doc.data().maxbid) + 25);\n            }\n          }\n        });\n      });\n\n    /*  if (parseInt(player.baseprice) === parseInt(player.maxbid)) {\n      setbiddingValue(parseInt(player.baseprice));\n    } else {\n      if (parseInt(player.maxbid) < 200 && parseInt(player.maxbid) >= 20)\n        setbiddingValue(parseInt(player.maxbid) + 10);\n      else if (\n        parseInt(player.maxbid) < 500 &&\n        parseInt(player.maxbid) >= 200\n      ) {\n        setbiddingValue(parseInt(player.maxbid) + 20);\n      } else {\n        setbiddingValue(parseInt(player.maxbid) + 25);\n      }\n    }*/\n  }, [player.maxbidBy]);\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(teamId)\n      .onSnapshot((snapshot) => {\n        if (snapshot.exists) {\n          setBalance(parseInt(snapshot.data().teamBalance));\n        }\n      });\n  }, []);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setbidDisplay(snapshot.docs.map((doc) => doc.data()));\n      });\n  }, []);\n\n  useEffect(() => {\n    if (player.status === \"close\") {\n      db.collection(\"players\").doc(player.name).update({\n        team: player.maxbidBy,\n      });\n      const ref3 = db.collection(\"users\").doc(player.maxbidBy);\n\n      ref3.onSnapshot((snapshot) => {\n        if (snapshot.exists) {\n          ref3.update({\n            teamBalance:\n              parseInt(snapshot.data().teamBalance) - parseInt(player.maxbid),\n          });\n        }\n      });\n    }\n  }, [player.status]);\n  //console.log(bidDisplay);\n  console.log(biddingValue);\n\n  return (\n    <Grid container justify=\"center\" spacing={3}>\n      <Grid item xs={6} display=\"inline\">\n        <h2>\n          {player.name}({player.age})\n        </h2>\n        <img src={player.Image} alt=\"No Image\" height=\"500px\"></img>\n        <Grid item xs={3}>\n          <p>Runs: {player.Runs}</p>\n          <p>Batting Average: {player.Batavg}</p>\n          <p>Strike Rate: {player.strikerate}</p>\n        </Grid>\n        <Grid item xs={3}>\n          <p>Wickets: {player.wickets}</p>\n          <p>Economy: {player.economy}</p>\n          <p>Bowling Average: {player.Bowlavg}</p>\n        </Grid>\n        <p>Base Price: {player.baseprice} lakhs</p>\n        {/* {player.maxbidBy === teamId ? <h3>WINNING</h3> : console.log(\"False\")} */}\n        <form>\n          {balance >= biddingValue ? (\n            [\n              player.maxbidBy !== teamId ? (\n                <button type=\"submit\" onClick={sendBid}>\n                  <p>{biddingValue}</p>Bid\n                </button>\n              ) : (\n                <button type=\"submit\" disabled>\n                  <p>{biddingValue}</p>Bid\n                </button>\n              ),\n            ]\n          ) : (\n            <button disabled>\n              <p>Not Enough Balance</p>\n            </button>\n          )}\n        </form>\n      </Grid>\n      <Grid item xs={6}>\n        {bidDisplay\n          ? bidDisplay.map((bid) => {\n              return <BiddingHistory key={bid.id ? bid.id : 0} bid={bid} />;\n            })\n          : console.log(\"No bids\")}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LiveBiddingHelper;\n"]},"metadata":{},"sourceType":"module"}
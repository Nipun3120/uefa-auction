{"ast":null,"code":"import firebase from \"firebase\";\nimport { ADD_BID, ADD_BID_ERROR, MAX_BID_UPDATED } from \"../types\";\nexport const Bids = ({\n  playerId,\n  biddingprice\n}) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    const teamId = getState().firebase.auth.uid;\n    console.log(\"Actions----\");\n    firestore.collection(\"players\").doc(playerId).collection(\"Bids\").doc(teamId).add({\n      bid: [{\n        biddingprice: biddingprice,\n        timestamp: firebase.firestore.Timestamp.now()\n      }]\n    }).then(() => {\n      dispatch({\n        type: ADD_BID\n      });\n    }).catch(err => {\n      dispatch({\n        type: ADD_BID_ERROR\n      }, err);\n    });\n    const maxi = 0;\n    firestore.collection(\"players\").where(\"name\", \"==\", playerId).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        console.log(\"Max:\", doc.data().maxbid);\n        maxi = doc.data().maxbid;\n      });\n    });\n\n    if (maxi < biddingprice) {\n      firestore.collection(\"players\").doc(playerId).update({\n        maxbid: biddingprice,\n        maxbidBy: teamId\n      }).then(() => {\n        dispatch({\n          type: MAX_BID_UPDATED\n        });\n      });\n    }\n  };\n};\n_c = Bids;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bids\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/store/actions/playerActions.js"],"names":["firebase","ADD_BID","ADD_BID_ERROR","MAX_BID_UPDATED","Bids","playerId","biddingprice","dispatch","getState","getFirestore","firestore","teamId","auth","uid","console","log","collection","doc","add","bid","timestamp","Timestamp","now","then","type","catch","err","maxi","where","get","snapshot","forEach","data","maxbid","update","maxbidBy"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,eAAjC,QAAwD,UAAxD;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAgC;AAClD,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAC/C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAME,MAAM,GAAGH,QAAQ,GAAGR,QAAX,CAAoBY,IAApB,CAAyBC,GAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAL,IAAAA,SAAS,CACNM,UADH,CACc,SADd,EAEGC,GAFH,CAEOZ,QAFP,EAGGW,UAHH,CAGc,MAHd,EAIGC,GAJH,CAION,MAJP,EAKGO,GALH,CAKO;AACHC,MAAAA,GAAG,EAAE,CACH;AACEb,QAAAA,YAAY,EAAEA,YADhB;AAEEc,QAAAA,SAAS,EAAEpB,QAAQ,CAACU,SAAT,CAAmBW,SAAnB,CAA6BC,GAA7B;AAFb,OADG;AADF,KALP,EAaGC,IAbH,CAaQ,MAAM;AACVhB,MAAAA,QAAQ,CAAC;AACPiB,QAAAA,IAAI,EAAEvB;AADC,OAAD,CAAR;AAGD,KAjBH,EAkBGwB,KAlBH,CAkBUC,GAAD,IAAS;AACdnB,MAAAA,QAAQ,CACN;AACEiB,QAAAA,IAAI,EAAEtB;AADR,OADM,EAINwB,GAJM,CAAR;AAMD,KAzBH;AA2BA,UAAMC,IAAI,GAAG,CAAb;AACAjB,IAAAA,SAAS,CACNM,UADH,CACc,SADd,EAEGY,KAFH,CAES,MAFT,EAEiB,IAFjB,EAEuBvB,QAFvB,EAGGwB,GAHH,GAIGN,IAJH,CAISO,QAAD,IAAc;AAClBA,MAAAA,QAAQ,CAACC,OAAT,CAAkBd,GAAD,IAAS;AACxBH,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,GAAG,CAACe,IAAJ,GAAWC,MAA/B;AACAN,QAAAA,IAAI,GAAGV,GAAG,CAACe,IAAJ,GAAWC,MAAlB;AACD,OAHD;AAID,KATH;;AAUA,QAAIN,IAAI,GAAGrB,YAAX,EAAyB;AACvBI,MAAAA,SAAS,CACNM,UADH,CACc,SADd,EAEGC,GAFH,CAEOZ,QAFP,EAGG6B,MAHH,CAGU;AACND,QAAAA,MAAM,EAAE3B,YADF;AAEN6B,QAAAA,QAAQ,EAAExB;AAFJ,OAHV,EAOGY,IAPH,CAOQ,MAAM;AACVhB,QAAAA,QAAQ,CAAC;AACPiB,UAAAA,IAAI,EAAErB;AADC,SAAD,CAAR;AAGD,OAXH;AAYD;AACF,GAxDD;AAyDD,CA1DM;KAAMC,I","sourcesContent":["import firebase from \"firebase\";\nimport { ADD_BID, ADD_BID_ERROR, MAX_BID_UPDATED } from \"../types\";\n\nexport const Bids = ({ playerId, biddingprice }) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    const teamId = getState().firebase.auth.uid;\n    console.log(\"Actions----\");\n    firestore\n      .collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId)\n      .add({\n        bid: [\n          {\n            biddingprice: biddingprice,\n            timestamp: firebase.firestore.Timestamp.now(),\n          },\n        ],\n      })\n      .then(() => {\n        dispatch({\n          type: ADD_BID,\n        });\n      })\n      .catch((err) => {\n        dispatch(\n          {\n            type: ADD_BID_ERROR,\n          },\n          err\n        );\n      });\n\n    const maxi = 0;\n    firestore\n      .collection(\"players\")\n      .where(\"name\", \"==\", playerId)\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          console.log(\"Max:\", doc.data().maxbid);\n          maxi = doc.data().maxbid;\n        });\n      });\n    if (maxi < biddingprice) {\n      firestore\n        .collection(\"players\")\n        .doc(playerId)\n        .update({\n          maxbid: biddingprice,\n          maxbidBy: teamId,\n        })\n        .then(() => {\n          dispatch({\n            type: MAX_BID_UPDATED,\n          });\n        });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
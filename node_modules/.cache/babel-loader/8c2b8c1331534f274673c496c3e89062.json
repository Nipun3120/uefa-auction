{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveBiddingHelper = ({\n  player,\n  playerId,\n  teamId\n}) => {\n  _s();\n\n  const [biddingValue, setbiddingValue] = useState(player.baseprice);\n  const [bidDisplay, setbidDisplay] = useState([]);\n  const [teamBids, setteamBids] = useState([]);\n\n  const sendBid = e => {\n    e.preventDefault(); ///Set bid to database\n\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").doc(teamId).onSnapshot(snapshot => {\n      if (snapshot.exists) {\n        snapshot.data().bid.map(b => {\n          console.log(\"bid\", b);\n\n          if (teamBids === null) {\n            setteamBids([b]);\n          } else {\n            teamBids.map(bi => {\n              if (bi.biddingprice !== b.biddingprice) {\n                setteamBids([...teamBids, b]);\n              }\n            });\n          }\n        });\n      }\n    });\n\n    if (teamBids !== null) {\n      db.collection(\"players\").doc(playerId).collection(\"Bids\").doc(teamId).set({\n        bid: [{\n          biddingprice: biddingValue,\n          timestamp: firebase.firestore.Timestamp.now()\n        }, ...teamBids]\n      }, {\n        merge: true\n      });\n    } else {\n      db.collection(\"players\").doc(playerId).collection(\"Bids\").doc(teamId).set({\n        bid: [{\n          biddingprice: biddingValue,\n          timestamp: firebase.firestore.Timestamp.now()\n        }]\n      }, {\n        merge: true\n      });\n    }\n\n    console.log(\"Maxbid:\", player.maxbid);\n    console.log(\"Price:\", biddingValue);\n\n    if (player.maxbid < biddingValue) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId\n      });\n    }\n\n    if (biddingValue < 200 && biddingValue >= 20) setbiddingValue(biddingValue + 10);else if (biddingValue < 500 && biddingValue >= 200) setbiddingValue(biddingValue + 20);else setbiddingValue(biddingValue + 25);\n  }; // console.log(\"ID:\", playerId);\n\n\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\").doc(playerId).collection(\"Bids\").onSnapshot(snapshot => {\n      snapshot.docs.map(doc => {\n        if (doc.exists) {\n          doc.data().bid.map(b => {\n            // console.log(doc.id);\n            // console.log(\"bid:\", b);\n            setbidDisplay([{\n              id: doc.id,\n              biddingprice: b.biddingprice,\n              timestamp: b.timestamp\n            }, ...bidDisplay]);\n          });\n        }\n      });\n    });\n  }, []); // console.log(bidDisplay);\n  // console.log(teamBids);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [player.name, \"(\", player.age, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: player.Image,\n      alt: \"No Image\",\n      height: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Runs: \", player.Runs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Batting Average: \", player.Batavg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Strike Rate: \", player.strikerate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Price: \", player.baseprice, \" lakhs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: sendBid,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: biddingValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), \"Bid\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveBiddingHelper, \"5f9j44WAKrfpcLaCwlcS7wzEgn0=\");\n\n_c = LiveBiddingHelper;\nexport default LiveBiddingHelper;\n/* const query = db\n      .collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId);\n\n    query.get().then((snapshot) => {\n      if (snapshot.exists) {\n        query.add({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      } else {\n        query.set({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      }\n    }); */\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveBiddingHelper\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBiddingHelper.js"],"names":["React","useEffect","useState","db","firebase","BiddingHistory","LiveBiddingHelper","player","playerId","teamId","biddingValue","setbiddingValue","baseprice","bidDisplay","setbidDisplay","teamBids","setteamBids","sendBid","e","preventDefault","collection","doc","onSnapshot","snapshot","exists","data","bid","map","b","console","log","bi","biddingprice","set","timestamp","firestore","Timestamp","now","merge","maxbid","update","maxbidBy","docs","id","name","age","Image","Runs","Batavg","strikerate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from \"../../config/Firebase\";\nimport firebase from \"firebase\";\nimport BiddingHistory from \"./BiddingHistory\";\nconst LiveBiddingHelper = ({ player, playerId, teamId }) => {\n  const [biddingValue, setbiddingValue] = useState(player.baseprice);\n  const [bidDisplay, setbidDisplay] = useState([]);\n  const [teamBids, setteamBids] = useState([]);\n  const sendBid = (e) => {\n    e.preventDefault();\n    ///Set bid to database\n    db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId)\n      .onSnapshot((snapshot) => {\n        if (snapshot.exists) {\n          snapshot.data().bid.map((b) => {\n            console.log(\"bid\", b);\n            if (teamBids === null) {\n              setteamBids([b]);\n            } else {\n              teamBids.map((bi) => {\n                if (bi.biddingprice !== b.biddingprice) {\n                  setteamBids([...teamBids, b]);\n                }\n              });\n            }\n          });\n        }\n      });\n    if (teamBids !== null) {\n      db.collection(\"players\")\n        .doc(playerId)\n        .collection(\"Bids\")\n        .doc(teamId)\n        .set(\n          {\n            bid: [\n              {\n                biddingprice: biddingValue,\n                timestamp: firebase.firestore.Timestamp.now(),\n              },\n              ...teamBids,\n            ],\n          },\n          { merge: true }\n        );\n    } else {\n      db.collection(\"players\")\n        .doc(playerId)\n        .collection(\"Bids\")\n        .doc(teamId)\n        .set(\n          {\n            bid: [\n              {\n                biddingprice: biddingValue,\n                timestamp: firebase.firestore.Timestamp.now(),\n              },\n            ],\n          },\n          { merge: true }\n        );\n    }\n    console.log(\"Maxbid:\", player.maxbid);\n    console.log(\"Price:\", biddingValue);\n    if (player.maxbid < biddingValue) {\n      db.collection(\"players\").doc(playerId).update({\n        maxbid: biddingValue,\n        maxbidBy: teamId,\n      });\n    }\n    if (biddingValue < 200 && biddingValue >= 20)\n      setbiddingValue(biddingValue + 10);\n    else if (biddingValue < 500 && biddingValue >= 200)\n      setbiddingValue(biddingValue + 20);\n    else setbiddingValue(biddingValue + 25);\n  };\n  // console.log(\"ID:\", playerId);\n  useEffect(() => {\n    //fetch bids from database\n    db.collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .onSnapshot((snapshot) => {\n        snapshot.docs.map((doc) => {\n          if (doc.exists) {\n            doc.data().bid.map((b) => {\n              // console.log(doc.id);\n              // console.log(\"bid:\", b);\n              setbidDisplay([\n                {\n                  id: doc.id,\n                  biddingprice: b.biddingprice,\n                  timestamp: b.timestamp,\n                },\n                ...bidDisplay,\n              ]);\n            });\n          }\n        });\n      });\n  }, []);\n  // console.log(bidDisplay);\n  // console.log(teamBids);\n  return (\n    <div>\n      <h2>\n        {player.name}({player.age})\n      </h2>\n      <img src={player.Image} alt=\"No Image\" height=\"500px\"></img>\n      <span>\n        <p>Runs: {player.Runs}</p>\n        <p>Batting Average: {player.Batavg}</p>\n        <p>Strike Rate: {player.strikerate}</p>\n        <p>Base Price: {player.baseprice} lakhs</p>\n      </span>\n      <form>\n        <button type=\"submit\" onClick={sendBid}>\n          <p>{biddingValue}</p>Bid\n        </button>\n      </form>\n      {/* {bidDisplay !== null\n        ? bidDisplay.map((bid) => {\n            return (\n              // console.log(\"bid:\", bid),\n              <BiddingHistory key={bid.id ? bid.id : 0} bid={bid} />\n            );\n          })\n        : console.log(\"No bids\")} */}\n    </div>\n  );\n};\n\nexport default LiveBiddingHelper;\n\n/* const query = db\n      .collection(\"players\")\n      .doc(playerId)\n      .collection(\"Bids\")\n      .doc(teamId);\n\n    query.get().then((snapshot) => {\n      if (snapshot.exists) {\n        query.add({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      } else {\n        query.set({\n          bid: [\n            {\n              biddingprice: biddingValue,\n              timestamp: firebase.firestore.Timestamp.now(),\n            },\n          ],\n        });\n      }\n    }); */\n"]},"metadata":{},"sourceType":"module"}
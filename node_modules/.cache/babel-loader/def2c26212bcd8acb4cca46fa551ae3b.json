{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/Admin/UpdatePlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { db } from \"../../config/Firebase\";\nimport { Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, withStyles } from \"@material-ui/core\";\nimport AllLivePlayers from \"./AllLivePlayers\";\nimport AllSilentPlayers from \"./AllSilentPlayers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    color: theme.palette.common.white\n  }\n}))(TableCell);\n\nconst UpdatePlayer = props => {\n  _s();\n\n  const [silentPlayers, setSilentPlayers] = useState([]);\n  const [livePlayers, setlivePlayers] = useState([]);\n  const [playerId, setplayerId] = useState(\"\");\n\n  const fetchLive = () => {\n    db.collection(\"players\").where(\"category\", \"==\", \"live\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        setplayerId(doc.id);\n        console.log(doc.id, \"=>\", doc.data());\n        setlivePlayers(livePlayers => [...livePlayers, {\n          id: doc.id,\n          data: doc.data()\n        }]);\n      });\n    }).catch(error => {\n      console.log(\"Could not fetch\");\n    });\n  };\n\n  const fetchSilent = () => {\n    db.collection(\"players\").where(\"category\", \"==\", \"silent\").get().then(snapshot => {\n      snapshot.forEach(doc => {\n        setplayerId(doc.id);\n        console.log(doc.id, \"=>\", doc.data());\n        setSilentPlayers(silentPlayers => [...silentPlayers, {\n          id: doc.id,\n          data: doc.data()\n        }]);\n      });\n    }).catch(error => {\n      console.log(\"Could not fetch\");\n    });\n  };\n\n  console.log(silentPlayers);\n  /* let arr = Object.entries(silentPlayers);\n  console.log(\"Arr:\", arr); */\n\n  useEffect(() => {\n    console.log(\"Working....\");\n    fetchLive();\n    fetchSilent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePlayer, \"Tbxk/kdpoKlg2SnjKDc2U5If+L8=\");\n\n_c = UpdatePlayer;\nexport default UpdatePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlayer\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/Admin/UpdatePlayer.js"],"names":["React","useEffect","useState","PropTypes","db","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","withStyles","AllLivePlayers","AllSilentPlayers","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","UpdatePlayer","props","silentPlayers","setSilentPlayers","livePlayers","setlivePlayers","playerId","setplayerId","fetchLive","collection","where","get","then","snapshot","forEach","doc","id","console","log","data","catch","error","fetchSilent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { db } from \"../../config/Firebase\";\n\nimport {\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  withStyles,\n} from \"@material-ui/core\";\nimport AllLivePlayers from \"./AllLivePlayers\";\nimport AllSilentPlayers from \"./AllSilentPlayers\";\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nconst UpdatePlayer = (props) => {\n  const [silentPlayers, setSilentPlayers] = useState([]);\n  const [livePlayers, setlivePlayers] = useState([]);\n  const [playerId, setplayerId] = useState(\"\");\n  const fetchLive = () => {\n    db.collection(\"players\")\n      .where(\"category\", \"==\", \"live\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          setplayerId(doc.id);\n\n          console.log(doc.id, \"=>\", doc.data());\n          setlivePlayers((livePlayers) => [\n            ...livePlayers,\n            { id: doc.id, data: doc.data() },\n          ]);\n        });\n      })\n      .catch((error) => {\n        console.log(\"Could not fetch\");\n      });\n  };\n  const fetchSilent = () => {\n    db.collection(\"players\")\n      .where(\"category\", \"==\", \"silent\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          setplayerId(doc.id);\n\n          console.log(doc.id, \"=>\", doc.data());\n          setSilentPlayers((silentPlayers) => [\n            ...silentPlayers,\n            { id: doc.id, data: doc.data() },\n          ]);\n        });\n      })\n      .catch((error) => {\n        console.log(\"Could not fetch\");\n      });\n  };\n\n  console.log(silentPlayers);\n  /* let arr = Object.entries(silentPlayers);\n  console.log(\"Arr:\", arr); */\n  useEffect(() => {\n    console.log(\"Working....\");\n    fetchLive();\n    fetchSilent();\n  }, []);\n  return (\n    <div>\n      <h1>Hello</h1>\n    </div>\n  );\n};\n\nexport default UpdatePlayer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBidding.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { db } from \"../../config/Firebase\";\nimport LiveBiddingHelper from \"./LiveBiddingHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveBidding = ({\n  auth\n}) => {\n  _s();\n\n  const [play, setPlay] = useState({});\n  const [playerId, setPlayerId] = useState(\"admin\");\n\n  const fetchsome = () => {};\n  /*  const fetchsome = () => {\n    db.collection(\"players\")\n      .where(\"display\", \"==\", \"true\")\n      .where(\"category\", \"==\", \"live\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          // console.log(doc.id, \"=>\", doc.data());\n          setPlay(doc.data());\n          setPlayerId(doc.id);\n        });\n      })\n      .catch((error) => {\n        console.log(\"Could not fetch\");\n      });\n  }; */\n  //console.log(play);\n\n\n  useEffect(() => {\n    console.log(\"Working....\");\n    db.collection(\"players\").where(\"display\", \"==\", \"true\").where(\"category\", \"==\", \"live\").onSnapshot(snapshot => {\n      snapshot.docs.map(doc => {\n        //console.log(doc.id, \"=>\", doc.data());\n        setPlay(doc.data());\n        setPlayerId(doc.id);\n      });\n    });\n  }, []);\n  useState(() => {\n    db.collection(\"refresh\").doc(\"value\").onSnapshot(snapshot => {\n      if (snapshot.data().value === \"true\") {\n        window.location.reload();\n        db.collection(\"refresh\").doc(\"button\").set({\n          value: \"false\"\n        });\n      }\n    });\n  });\n  if (!auth.uid) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this);\n  /* if (Status === \"false\") {\n    window.location.reload();\n  } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: play !== null && playerId !== \"admin\" ? /*#__PURE__*/_jsxDEV(LiveBiddingHelper, {\n      player: play,\n      playerId: playerId,\n      teamId: auth.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Player to Bid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveBidding, \"Fet2KDEugEBaKO4j5j/QQRCnG0c=\");\n\n_c = LiveBidding;\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n}; */\n\n\nexport default connect(mapStateToProps)(LiveBidding);\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveBidding\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding/LiveBidding.js"],"names":["React","useEffect","useState","connect","Redirect","db","LiveBiddingHelper","LiveBidding","auth","play","setPlay","playerId","setPlayerId","fetchsome","console","log","collection","where","onSnapshot","snapshot","docs","map","doc","data","id","value","window","location","reload","set","uid","mapStateToProps","state","authError","firebase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,EAAT,QAAmB,uBAAnB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,OAAD,CAAxC;;AAEA,QAAMW,SAAS,GAAG,MAAM,CAAE,CAA1B;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAV,IAAAA,EAAE,CAACW,UAAH,CAAc,SAAd,EACGC,KADH,CACS,SADT,EACoB,IADpB,EAC0B,MAD1B,EAEGA,KAFH,CAES,UAFT,EAEqB,IAFrB,EAE2B,MAF3B,EAGGC,UAHH,CAGeC,QAAD,IAAc;AACxBA,MAAAA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAAS;AACzB;AACAZ,QAAAA,OAAO,CAACY,GAAG,CAACC,IAAJ,EAAD,CAAP;AACAX,QAAAA,WAAW,CAACU,GAAG,CAACE,EAAL,CAAX;AACD,OAJD;AAKD,KATH;AAUD,GAZQ,EAYN,EAZM,CAAT;AAaAtB,EAAAA,QAAQ,CAAC,MAAM;AACbG,IAAAA,EAAE,CAACW,UAAH,CAAc,SAAd,EACGM,GADH,CACO,OADP,EAEGJ,UAFH,CAEeC,QAAD,IAAc;AACxB,UAAIA,QAAQ,CAACI,IAAT,GAAgBE,KAAhB,KAA0B,MAA9B,EAAsC;AACpCC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAvB,QAAAA,EAAE,CAACW,UAAH,CAAc,SAAd,EAAyBM,GAAzB,CAA6B,QAA7B,EAAuCO,GAAvC,CAA2C;AACzCJ,UAAAA,KAAK,EAAE;AADkC,SAA3C;AAGD;AACF,KATH;AAUD,GAXO,CAAR;AAYA,MAAI,CAACjB,IAAI,CAACsB,GAAV,EAAe,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACf;AACF;AACA;;AACE,sBACE;AAAA,cACGrB,IAAI,KAAK,IAAT,IAAiBE,QAAQ,KAAK,OAA9B,gBACC,QAAC,iBAAD;AACE,MAAA,MAAM,EAAEF,IADV;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,MAAM,EAAEH,IAAI,CAACsB;AAHf;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlED;;GAAMvB,W;;KAAAA,W;;AAoEN,MAAMwB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACxB,IAAN,CAAWyB,SADjB;AAELzB,IAAAA,IAAI,EAAEwB,KAAK,CAACE,QAAN,CAAe1B;AAFhB,GAAP;AAID,CALD;AAOA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,OAAO,CAAC4B,eAAD,CAAP,CAAyBxB,WAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { db } from \"../../config/Firebase\";\nimport LiveBiddingHelper from \"./LiveBiddingHelper\";\n\nconst LiveBidding = ({ auth }) => {\n  const [play, setPlay] = useState({});\n  const [playerId, setPlayerId] = useState(\"admin\");\n\n  const fetchsome = () => {};\n\n  /*  const fetchsome = () => {\n    db.collection(\"players\")\n      .where(\"display\", \"==\", \"true\")\n      .where(\"category\", \"==\", \"live\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          // console.log(doc.id, \"=>\", doc.data());\n          setPlay(doc.data());\n          setPlayerId(doc.id);\n        });\n      })\n      .catch((error) => {\n        console.log(\"Could not fetch\");\n      });\n  }; */\n  //console.log(play);\n\n  useEffect(() => {\n    console.log(\"Working....\");\n    db.collection(\"players\")\n      .where(\"display\", \"==\", \"true\")\n      .where(\"category\", \"==\", \"live\")\n      .onSnapshot((snapshot) => {\n        snapshot.docs.map((doc) => {\n          //console.log(doc.id, \"=>\", doc.data());\n          setPlay(doc.data());\n          setPlayerId(doc.id);\n        });\n      });\n  }, []);\n  useState(() => {\n    db.collection(\"refresh\")\n      .doc(\"value\")\n      .onSnapshot((snapshot) => {\n        if (snapshot.data().value === \"true\") {\n          window.location.reload();\n          db.collection(\"refresh\").doc(\"button\").set({\n            value: \"false\",\n          });\n        }\n      });\n  });\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  /* if (Status === \"false\") {\n    window.location.reload();\n  } */\n  return (\n    <div>\n      {play !== null && playerId !== \"admin\" ? (\n        <LiveBiddingHelper\n          player={play}\n          playerId={playerId}\n          teamId={auth.uid}\n        />\n      ) : (\n        <h1>No Player to Bid</h1>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n}; */\n\nexport default connect(mapStateToProps)(LiveBidding);\n"]},"metadata":{},"sourceType":"module"}
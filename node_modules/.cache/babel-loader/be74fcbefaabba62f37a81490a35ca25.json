{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { db } from \"../config/Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiveBidding = ({\n  auth\n}) => {\n  _s();\n\n  const [playerCard, setPlayerCard] = useState({\n    display: Boolean\n  });\n\n  const fetchCard = () => {\n    db.collection(\"players\").onSnapshot(snapshot => {\n      const result = snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      }));\n      result.map(res => {\n        console.log(res.data.display);\n\n        if (res.data.display === true) {\n          console.log(typeof res.data);\n          setPlayerCard({\n            display: res.data.display\n          });\n        }\n      });\n      console.log(playerCard);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"Working....\");\n    fetchCard();\n  }, []);\n  /* if (!auth.uid) return <Redirect to=\"/signin\" />; */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Live Bidding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiveBidding, \"zP1n4MB1LxxOIxCk25Xu8FGlnGg=\");\n\n_c = LiveBidding;\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n}; */\n\n\nexport default connect(mapStateToProps)(LiveBidding);\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveBidding\");","map":{"version":3,"sources":["/home/rahul/Projects/auction/ipl-auction/src/container/LiveBidding.js"],"names":["React","useEffect","useState","connect","Redirect","db","LiveBidding","auth","playerCard","setPlayerCard","display","Boolean","fetchCard","collection","onSnapshot","snapshot","result","docs","map","doc","id","data","res","console","log","mapStateToProps","state","authError","firebase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,EAAT,QAAmB,oBAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC;AAAEQ,IAAAA,OAAO,EAAEC;AAAX,GAAD,CAA5C;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBP,IAAAA,EAAE,CAACQ,UAAH,CAAc,SAAd,EAAyBC,UAAzB,CAAqCC,QAAD,IAAc;AAChD,YAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AACzCC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADiC;AAEzCC,QAAAA,IAAI,EAAEF,GAAG,CAACE,IAAJ;AAFmC,OAAV,CAAlB,CAAf;AAIAL,MAAAA,MAAM,CAACE,GAAP,CAAYI,GAAD,IAAS;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACD,IAAJ,CAASX,OAArB;;AACA,YAAIY,GAAG,CAACD,IAAJ,CAASX,OAAT,KAAqB,IAAzB,EAA+B;AAC7Ba,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,GAAG,CAACD,IAAvB;AACAZ,UAAAA,aAAa,CAAC;AACZC,YAAAA,OAAO,EAAEY,GAAG,CAACD,IAAJ,CAASX;AADN,WAAD,CAAb;AAGD;AACF,OARD;AASAa,MAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAZ;AACD,KAfD;AAgBD,GAjBD;;AAmBAP,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAZ,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;AAKA;;AACA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCD;;GAAMN,W;;KAAAA,W;;AAmCN,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACnB,IAAN,CAAWoB,SADjB;AAELpB,IAAAA,IAAI,EAAEmB,KAAK,CAACE,QAAN,CAAerB;AAFhB,GAAP;AAID,CALD;AAOA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,OAAO,CAACsB,eAAD,CAAP,CAAyBnB,WAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { db } from \"../config/Firebase\";\n\nconst LiveBidding = ({ auth }) => {\n  const [playerCard, setPlayerCard] = useState({ display: Boolean });\n\n  const fetchCard = () => {\n    db.collection(\"players\").onSnapshot((snapshot) => {\n      const result = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        data: doc.data(),\n      }));\n      result.map((res) => {\n        console.log(res.data.display);\n        if (res.data.display === true) {\n          console.log(typeof res.data);\n          setPlayerCard({\n            display: res.data.display,\n          });\n        }\n      });\n      console.log(playerCard);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"Working....\");\n    fetchCard();\n  }, []);\n\n  /* if (!auth.uid) return <Redirect to=\"/signin\" />; */\n  return (\n    <div>\n      <h1>Live Bidding</h1>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n}; */\n\nexport default connect(mapStateToProps)(LiveBidding);\n"]},"metadata":{},"sourceType":"module"}